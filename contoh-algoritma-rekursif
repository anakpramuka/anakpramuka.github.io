<!DOCTYPE html>
<html lang="id" prefix="og: https://ogp.me/ns#">

<head>
    <meta charset="UTF-8">
    <link rel="profile" href="https://gmpg.org/xfn/11">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Contoh Algoritma Rekursif - BELAJAR</title>
    <meta name="description" content="Contoh Algoritma Rekursif, , , , , , , 0, , , , , , 0, contoh-algoritma-rekursif, BELAJAR" />
    <meta name="robots" content="index,follow" />
    <meta property="og:locale" content="id_ID" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Contoh Algoritma Rekursif - BELAJAR" />
    <meta property="og:description" content="Contoh Algoritma Rekursif, , , , , , , 0, , , , , , 0, contoh-algoritma-rekursif, BELAJAR" />
    <meta property="og:site_name" content="BELAJAR" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Contoh Algoritma Rekursif - BELAJAR" />
    <meta name="twitter:description" content="Contoh Algoritma Rekursif, , , , , , , 0, , , , , , 0, contoh-algoritma-rekursif, BELAJAR" />
    <link rel='stylesheet' id='generate-style-css' href='https://anakpramuka.github.io/css/main.min.css'?ver=3.2.4'
        media='all' />
    <link rel='stylesheet' id='ez-toc-css' href='https://anakpramuka.github.io/css/screen.min.css'?ver=2.0.40' media='all' />
    <style id='generate-style-inline-css'>
        body {
            background-color: #f7f7f7;
            color: #222222;
        }

        a {
            color: #1e73be;
        }

        a:hover,
        a:focus,
        a:active {
            color: #000000;
        }

        .wp-block-group__inner-container {
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .generate-back-to-top {
            font-size: 20px;
            border-radius: 3px;
            position: fixed;
            bottom: 30px;
            right: 30px;
            line-height: 40px;
            width: 40px;
            text-align: center;
            z-index: 10;
            transition: opacity 300ms ease-in-out;
            opacity: 0.1;
            transform: translateY(1000px);
        }

        .generate-back-to-top__show {
            opacity: 1;
            transform: translateY(0);
        }

        .navigation-search {
            position: absolute;
            left: -99999px;
            pointer-events: none;
            visibility: hidden;
            z-index: 20;
            width: 100%;
            top: 0;
            transition: opacity 100ms ease-in-out;
            opacity: 0;
        }

        .navigation-search.nav-search-active {
            left: 0;
            right: 0;
            pointer-events: auto;
            visibility: visible;
            opacity: 1;
        }

        .navigation-search input[type="search"] {
            outline: 0;
            border: 0;
            vertical-align: bottom;
            line-height: 1;
            opacity: 0.9;
            width: 100%;
            z-index: 20;
            border-radius: 0;
            -webkit-appearance: none;
            height: 60px;
        }

        .navigation-search input::-ms-clear {
            display: none;
            width: 0;
            height: 0;
        }

        .navigation-search input::-ms-reveal {
            display: none;
            width: 0;
            height: 0;
        }

        .navigation-search input::-webkit-search-decoration,
        .navigation-search input::-webkit-search-cancel-button,
        .navigation-search input::-webkit-search-results-button,
        .navigation-search input::-webkit-search-results-decoration {
            display: none;
        }

        .gen-sidebar-nav .navigation-search {
            top: auto;
            bottom: 0;
        }

        :root {
            --contrast: #222222;
            --contrast-2: #575760;
            --contrast-3: #b2b2be;
            --base: #f0f0f0;
            --base-2: #f7f8f9;
            --base-3: #ffffff;
            --accent: #1e73be;
        }

        .has-contrast-color {
            color: var(--contrast);
        }

        .has-contrast-background-color {
            background-color: var(--contrast);
        }

        .has-contrast-2-color {
            color: var(--contrast-2);
        }

        .has-contrast-2-background-color {
            background-color: var(--contrast-2);
        }

        .has-contrast-3-color {
            color: var(--contrast-3);
        }

        .has-contrast-3-background-color {
            background-color: var(--contrast-3);
        }

        .has-base-color {
            color: var(--base);
        }

        .has-base-background-color {
            background-color: var(--base);
        }

        .has-base-2-color {
            color: var(--base-2);
        }

        .has-base-2-background-color {
            background-color: var(--base-2);
        }

        .has-base-3-color {
            color: var(--base-3);
        }

        .has-base-3-background-color {
            background-color: var(--base-3);
        }

        .has-accent-color {
            color: var(--accent);
        }

        .has-accent-background-color {
            background-color: var(--accent);
        }

        body,
        button,
        input,
        select,
        textarea {
            font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
        }

        body {
            line-height: 1.5;
        }

        .entry-content>[class*="wp-block-"]:not(:last-child) {
            margin-bottom: 1.5em;
        }

        .main-navigation .main-nav ul ul li a {
            font-size: 14px;
        }

        .sidebar .widget,
        .footer-widgets .widget {
            font-size: 17px;
        }

        @media (max-width:768px) {
            h1 {
                font-size: 31px;
            }

            h2 {
                font-size: 27px;
            }

            h3 {
                font-size: 24px;
            }

            h4 {
                font-size: 22px;
            }

            h5 {
                font-size: 19px;
            }
        }

        .top-bar {
            background-color: #636363;
            color: #ffffff;
        }

        .top-bar a {
            color: #ffffff;
        }

        .top-bar a:hover {
            color: #303030;
        }

        .site-header {
            background-color: #ffffff;
        }

        .main-title a,
        .main-title a:hover {
            color: #222222;
        }

        .site-description {
            color: #757575;
        }

        .main-navigation,
        .main-navigation ul ul {
            background-color: #ed4250;
        }

        .main-navigation .main-nav ul li a,
        .main-navigation .menu-toggle,
        .main-navigation .menu-bar-items {
            color: #ffffff;
        }

        .main-navigation .main-nav ul li:not([class*="current-menu-"]):hover>a,
        .main-navigation .main-nav ul li:not([class*="current-menu-"]):focus>a,
        .main-navigation .main-nav ul li.sfHover:not([class*="current-menu-"])>a,
        .main-navigation .menu-bar-item:hover>a,
        .main-navigation .menu-bar-item.sfHover>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        button.menu-toggle:hover,
        button.menu-toggle:focus {
            color: #ffffff;
        }

        .main-navigation .main-nav ul li[class*="current-menu-"]>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        .navigation-search input[type="search"],
        .navigation-search input[type="search"]:active,
        .navigation-search input[type="search"]:focus,
        .main-navigation .main-nav ul li.search-item.active>a,
        .main-navigation .menu-bar-items .search-item.active>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        .main-navigation ul ul {
            background-color: #c42f2f;
        }

        .main-navigation .main-nav ul ul li a {
            color: #ffffff;
        }

        .main-navigation .main-nav ul ul li:not([class*="current-menu-"]):hover>a,
        .main-navigation .main-nav ul ul li:not([class*="current-menu-"]):focus>a,
        .main-navigation .main-nav ul ul li.sfHover:not([class*="current-menu-"])>a {
            color: #fcd9d6;
            background-color: #c42f2f;
        }

        .main-navigation .main-nav ul ul li[class*="current-menu-"]>a {
            color: #fcd9d6;
            background-color: #c42f2f;
        }

        .separate-containers .inside-article,
        .separate-containers .comments-area,
        .separate-containers .page-header,
        .one-container .container,
        .separate-containers .paging-navigation,
        .inside-page-header {
            background-color: #ffffff;
        }

        .entry-title a {
            color: #222222;
        }

        .entry-title a:hover {
            color: #55555e;
        }

        .entry-meta {
            color: #595959;
        }

        .sidebar .widget {
            background-color: #ffffff;
        }

        .footer-widgets {
            background-color: #ffffff;
        }

        .footer-widgets .widget-title {
            color: #000000;
        }

        .site-info {
            color: #ffffff;
            background-color: #55555e;
        }

        .site-info a {
            color: #ffffff;
        }

        .site-info a:hover {
            color: #d3d3d3;
        }

        .footer-bar .widget_nav_menu .current-menu-item a {
            color: #d3d3d3;
        }

        input[type="text"],
        input[type="email"],
        input[type="url"],
        input[type="password"],
        input[type="search"],
        input[type="tel"],
        input[type="number"],
        textarea,
        select {
            color: #666666;
            background-color: #fafafa;
            border-color: #cccccc;
        }

        input[type="text"]:focus,
        input[type="email"]:focus,
        input[type="url"]:focus,
        input[type="password"]:focus,
        input[type="search"]:focus,
        input[type="tel"]:focus,
        input[type="number"]:focus,
        textarea:focus,
        select:focus {
            color: #666666;
            background-color: #ffffff;
            border-color: #bfbfbf;
        }

        button,
        html input[type="button"],
        input[type="reset"],
        input[type="submit"],
        a.button,
        a.wp-block-button__link:not(.has-background) {
            color: #ffffff;
            background-color: #55555e;
        }

        button:hover,
        html input[type="button"]:hover,
        input[type="reset"]:hover,
        input[type="submit"]:hover,
        a.button:hover,
        button:focus,
        html input[type="button"]:focus,
        input[type="reset"]:focus,
        input[type="submit"]:focus,
        a.button:focus,
        a.wp-block-button__link:not(.has-background):active,
        a.wp-block-button__link:not(.has-background):focus,
        a.wp-block-button__link:not(.has-background):hover {
            color: #ffffff;
            background-color: #3f4047;
        }

        a.generate-back-to-top {
            background-color: rgba(0, 0, 0, 0.4);
            color: #ffffff;
        }

        a.generate-back-to-top:hover,
        a.generate-back-to-top:focus {
            background-color: rgba(0, 0, 0, 0.6);
            color: #ffffff;
        }

        @media (max-width:768px) {

            .main-navigation .menu-bar-item:hover>a,
            .main-navigation .menu-bar-item.sfHover>a {
                background: none;
                color: #ffffff;
            }
        }

        .nav-below-header .main-navigation .inside-navigation.grid-container,
        .nav-above-header .main-navigation .inside-navigation.grid-container {
            padding: 0px 20px 0px 20px;
        }

        .site-main .wp-block-group__inner-container {
            padding: 40px;
        }

        .separate-containers .paging-navigation {
            padding-top: 20px;
            padding-bottom: 20px;
        }

        .entry-content .alignwide,
        body:not(.no-sidebar) .entry-content .alignfull {
            margin-left: -40px;
            width: calc(100% + 80px);
            max-width: calc(100% + 80px);
        }

        .rtl .menu-item-has-children .dropdown-menu-toggle {
            padding-left: 20px;
        }

        .rtl .main-navigation .main-nav ul li.menu-item-has-children>a {
            padding-right: 20px;
        }

        @media (max-width:768px) {

            .separate-containers .inside-article,
            .separate-containers .comments-area,
            .separate-containers .page-header,
            .separate-containers .paging-navigation,
            .one-container .site-content,
            .inside-page-header {
                padding: 30px;
            }

            .site-main .wp-block-group__inner-container {
                padding: 30px;
            }

            .inside-top-bar {
                padding-right: 30px;
                padding-left: 30px;
            }

            .inside-header {
                padding-right: 30px;
                padding-left: 30px;
            }

            .widget-area .widget {
                padding-top: 30px;
                padding-right: 30px;
                padding-bottom: 30px;
                padding-left: 30px;
            }

            .footer-widgets-container {
                padding-top: 30px;
                padding-right: 30px;
                padding-bottom: 30px;
                padding-left: 30px;
            }

            .inside-site-info {
                padding-right: 30px;
                padding-left: 30px;
            }

            .entry-content .alignwide,
            body:not(.no-sidebar) .entry-content .alignfull {
                margin-left: -30px;
                width: calc(100% + 60px);
                max-width: calc(100% + 60px);
            }

            .one-container .site-main .paging-navigation {
                margin-bottom: 20px;
            }
        }

        /* End cached CSS */
        .is-right-sidebar {
            width: 30%;
        }

        .is-left-sidebar {
            width: 30%;
        }

        .site-content .content-area {
            width: 70%;
        }

        @media (max-width:768px) {

            .main-navigation .menu-toggle,
            .sidebar-nav-mobile:not(#sticky-placeholder) {
                display: block;
            }

            .main-navigation ul,
            .gen-sidebar-nav,
            .main-navigation:not(.slideout-navigation):not(.toggled) .main-nav>ul,
            .has-inline-mobile-toggle #site-navigation .inside-navigation>*:not(.navigation-search):not(.main-nav) {
                display: none;
            }

            .nav-align-right .inside-navigation,
            .nav-align-center .inside-navigation {
                justify-content: space-between;
            }
        }
    </style>
    <link rel="icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-32x32.png" sizes="32x32" />
    <link rel="icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-192x192.png" sizes="192x192" />
    <link rel="apple-touch-icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-180x180.png" />
    <meta name="msapplication-TileImage" content="https://anakpramuka.github.io/img/cropped-soalbelajar-270x270.png" />
</head>

<body
    class="home blog wp-custom-logo wp-embed-responsive right-sidebar nav-above-header separate-containers nav-search-enabled nav-aligned-center header-aligned-center dropdown-hover"
    itemtype="https://schema.org/Blog" itemscope>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-dark-grayscale">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 0.49803921568627" />
                    <feFuncG type="table" tableValues="0 0.49803921568627" />
                    <feFuncB type="table" tableValues="0 0.49803921568627" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-grayscale">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 1" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0 1" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-purple-yellow">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.54901960784314 0.98823529411765" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0.71764705882353 0.25490196078431" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-blue-red">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 1" />
                    <feFuncG type="table" tableValues="0 0.27843137254902" />
                    <feFuncB type="table" tableValues="0.5921568627451 0.27843137254902" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-midnight">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 0" />
                    <feFuncG type="table" tableValues="0 0.64705882352941" />
                    <feFuncB type="table" tableValues="0 1" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-magenta-yellow">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.78039215686275 1" />
                    <feFuncG type="table" tableValues="0 0.94901960784314" />
                    <feFuncB type="table" tableValues="0.35294117647059 0.47058823529412" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-purple-green">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.65098039215686 0.40392156862745" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0.44705882352941 0.4" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-blue-orange">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.098039215686275 1" />
                    <feFuncG type="table" tableValues="0 0.66274509803922" />
                    <feFuncB type="table" tableValues="0.84705882352941 0.41960784313725" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><a class="screen-reader-text skip-link" href="#content" title="Langsung ke isi">Langsung ke isi</a>
    <nav class="main-navigation nav-align-center has-menu-bar-items sub-menu-right" id="site-navigation"
        aria-label="Utama" itemtype="https://schema.org/SiteNavigationElement" itemscope>
        <div class="inside-navigation grid-container">
            <form method="get" class="search-form navigation-search" action="/">
                <input type="search" class="search-field" value="" name="q" title="Cari" />
            </form> <button class="menu-toggle" aria-controls="primary-menu" aria-expanded="false">
                <span class="gp-icon icon-menu-bars"><svg viewBox="0 0 512 512" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                        <path
                            d="M0 96c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24zm0 160c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24zm0 160c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24z" />
                    </svg><svg viewBox="0 0 512 512" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                        width="1em" height="1em">
                        <path
                            d="M71.029 71.029c9.373-9.372 24.569-9.372 33.942 0L256 222.059l151.029-151.03c9.373-9.372 24.569-9.372 33.942 0 9.372 9.373 9.372 24.569 0 33.942L289.941 256l151.03 151.029c9.372 9.373 9.372 24.569 0 33.942-9.373 9.372-24.569 9.372-33.942 0L256 289.941l-151.029 151.03c-9.373 9.372-24.569 9.372-33.942 0-9.372-9.373-9.372-24.569 0-33.942L222.059 256 71.029 104.971c-9.372-9.373-9.372-24.569 0-33.942z" />
                    </svg></span><span class="mobile-menu">Menu</span> </button>
            <div id="primary-menu" class="main-nav">
                <ul id="menu-soal-belajar" class=" menu sf-menu">
                    <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1"><a
                            href="https://anakpramuka.github.io">Home</a></li>
                </ul>
                </ul>
            </div>
            <div class="menu-bar-items"><span class="menu-bar-item search-item"><a aria-label="Buka Kolom Pencarian"
                        href="#"><span class="gp-icon icon-search"><svg viewBox="0 0 512 512"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                                <path fill-rule="evenodd" clip-rule="evenodd"
                                    d="M208 48c-88.366 0-160 71.634-160 160s71.634 160 160 160 160-71.634 160-160S296.366 48 208 48zM0 208C0 93.125 93.125 0 208 0s208 93.125 208 208c0 48.741-16.765 93.566-44.843 129.024l133.826 134.018c9.366 9.379 9.355 24.575-.025 33.941-9.379 9.366-24.575 9.355-33.941-.025L337.238 370.987C301.747 399.167 256.839 416 208 416 93.125 416 0 322.875 0 208z" />
                            </svg><svg viewBox="0 0 512 512" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                width="1em" height="1em">
                                <path
                                    d="M71.029 71.029c9.373-9.372 24.569-9.372 33.942 0L256 222.059l151.029-151.03c9.373-9.372 24.569-9.372 33.942 0 9.372 9.373 9.372 24.569 0 33.942L289.941 256l151.03 151.029c9.372 9.373 9.372 24.569 0 33.942-9.373 9.372-24.569 9.372-33.942 0L256 289.941l-151.029 151.03c-9.373 9.372-24.569 9.372-33.942 0-9.372-9.373-9.372-24.569 0-33.942L222.059 256 71.029 104.971c-9.372-9.373-9.372-24.569 0-33.942z" />
                            </svg></span></a></span></div>
        </div>
    </nav>
    <header class="site-header grid-container" id="masthead" aria-label="Situs"
        itemtype="https://schema.org/WPHeader" itemscope>
        <div class="inside-header grid-container">
            <h1 class="site-logo">
                <a href="https://anakpramuka.github.io" rel="home"> BELAJAR</a>
            </h1>
        </div>
    </header>

    <div class="site grid-container container hfeed" id="page">
        <div class="site-content" id="content">
            <div class="content-area" id="primary">
                    <main class="site-main" id="main">
        <article id="post-1327" class="post-1327 post type-post status-publish format-standard hentry category-info"
            itemtype="https://schema.org/CreativeWork" itemscope="">
            <div class="inside-article">
                <header class="entry-header" aria-label="Konten">
                    <h1 class="entry-title" itemprop="headline">Contoh Algoritma Rekursif</h1>
                    <div class="entry-meta">
                       <span
                            class="byline">oleh <span class="author vcard" itemprop="author"
                                itemtype="https://schema.org/Person" itemscope=""><span class="author-name"
                                    itemprop="name">sitanggangm1143</span></span></span>
                    </div>
                </header>
                <div class="entry-content" itemprop="text">
                    <div style="text-align: center">
                        <img src="https://tse1.mm.bing.net/th?q=Contoh+Algoritma+Rekursif" alt="Contoh Algoritma Rekursif">
                    </div>
                    <p></p>
                    <p>Algoritma rekursif bilangan fibonacci dan faktorial</p>
                    <div id="ez-toc-container"
                        class="ez-toc-v2_0_40 counter-hierarchy ez-toc-counter ez-toc-light-blue ez-toc-container-direction">
                        <div class="ez-toc-title-container">
                            <p class="ez-toc-title">Daftar Isi</p>
                            <span class="ez-toc-title-toggle"><a href="#"
                                    class="ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle"
                                    area-label="ez-toc-toggle-icon-1"><label for="item-63b392361c4a0"
                                        aria-label="Table of Content"><span
                                            style="display: flex;align-items: center;width: 35px;height: 30px;justify-content: center;direction:ltr;"><svg
                                                style="fill: #999;color:#999" xmlns="http://www.w3.org/2000/svg"
                                                class="list-377408" width="20px" height="20px" viewBox="0 0 24 24"
                                                fill="none">
                                                <path
                                                    d="M6 6H4v2h2V6zm14 0H8v2h12V6zM4 11h2v2H4v-2zm16 0H8v2h12v-2zM4 16h2v2H4v-2zm16 0H8v2h12v-2z"
                                                    fill="currentColor"></path>
                                            </svg><svg style="fill: #999;color:#999" class="arrow-unsorted-368013"
                                                xmlns="http://www.w3.org/2000/svg" width="10px" height="10px"
                                                viewBox="0 0 24 24" version="1.2" baseProfile="tiny">
                                                <path
                                                    d="M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z">
                                                </path>
                                            </svg></span></label><input type="checkbox" id="item-63b392361c4a0"></a></span>
                        </div>
                        <nav>
                            <ul class="ez-toc-list ez-toc-list-level-1 ">
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#algoritma-rekursif-bilangan-fibonacci-dan-faktorial">1.
                                            Algoritma rekursif bilangan fibonacci dan faktorial</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buat-algoritma-untuk-mencetak-nama-anda-sebanyak-5-kali-dengan-prosedur-rekursif%e2%80%8b">2.
                                            buat algoritma untuk mencetak nama anda sebanyak 5 kali dengan prosedur rekursif​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buat-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">3.
                                            Buat algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif ?</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#1-buat-algoritma-untuk-mencetak-deret-angka-135-sd-100-angka-dengan-menggunakan-prosedur-rekursif-menggunakan-program-phyton-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-deng">4.
                                            1. buat algoritma untuk mencetak deret angka 1,3,5...s/d 100 angka dengan menggunakan prosedur rekursif menggunakan program phyton.
2. buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif menggunakan program phyton.</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#1-buat-algoritma-untuk-mencetak-deret-angka%c2%a0-135-sd-1000-angka-dengan-menggunakan-prosedur-rekursif-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">5.
                                            1. Buat algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif.2. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buat-algoritma-untuk-mencetak-deret-angka-1-3-5-sd-1000-angka-dengan-menggunakan-prosedur-rekursif">6.
                                            Buat algoritma untuk mencetak deret angka 1, 3, 5, ... s/d 1000 angka dengan menggunakan prosedur rekursif</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#algoritma-menghitung-bilangan-faktorial-dengan-menggunakan-perulangan-while-dan-fungsi-rekursif">7.
                                            algoritma menghitung bilangan faktorial dengan menggunakan perulangan while dan fungsi rekursif</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">8.
                                            Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#1-buat-algoritma-untuk-mencetak-deret-angka-135-sd-100-angka-dengan-menggunakan-prosedur-rekursif2-buat-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">9.
                                            1. Buat algoritma untuk mencetak deret angka 1,3,5,.... s/d 100 angka dengan menggunakan prosedur rekursif
2. Buat algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buat-algoritma-untuk-mencetak-deret-angka-1-3-5-sd-1000-angka-dengan-menggunakan-prosedur-rekursif">10.
                                            Buat algoritma untuk mencetak deret angka 1, 3, 5, ... s/d 1000 angka dengan menggunakan prosedur rekursif</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#contoh-program-c-rekursif-beserta-flowchartnya">11.
                                            contoh program c++ rekursif beserta flowchartnya</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#1-buat-algoritma-untuk-mencetak-deret-angka%c2%a0-135-sd-1000-angka-dengan-menggunakan-prosedur-rekursif-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">12.
                                            1. Buat algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif.2. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif menggunakan cout,</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">13.
                                            buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">14.
                                            Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif-pada-python%e2%80%8b">15.
                                            Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif pada python​</a>
                                    </li>
                                                            </ul>
                        </nav>
                    </div>
                                            <h2 class="ez-toc-section" id="algoritma-rekursif-bilangan-fibonacci-dan-faktorial">
                            1. Algoritma rekursif bilangan fibonacci dan faktorial</h2><br />
                        1. Algoritma Fibonacci Secara Rekursif<p>Berdasarkan definisi, bilangan Fibonacci ke-[tex]n[/tex] dengan [tex]n[/tex] bilangan bulat tak-negatif dinyatakan oleh:</p><p>[tex]\begin{aligned}F(n)=\begin{cases}0,&amp;{\rm jika\ }n=0;\\1,&amp;{\rm jika\ }n=1;\\F(n\!-\!1)+F(n\!-\!2),&amp;{\rm jika\ }n &gt; 1.\\\end{cases}\end{aligned}[/tex]</p><p>Maka, algoritma program utama dan fungsi bilangan Fibonacci secara rekursif adalah sebagai berikut.</p><p><strong>Program </strong><strong>BilanganFibonacci</strong><br /><strong>Kamus:</strong><br />    n : integer ≥ 0<br />    function Fibonacci(n : integer ≥ 0) → integer<br />    {Diberikan n, menghitung bilangan Fibonacci ke-n}<br /><strong>Algoritma:</strong><br />    input(n)<br />    output(Fibonacci(n))<br />____________________</p><p><strong>function</strong> Fibonacci(n : integer ≥ 0) → integer<br />{Diberikan n, menghitung bilangan Fibonacci ke-n}<br /><strong>Kamus lokal:</strong><br />    {tidak ada}<br /><strong>Algoritma:</strong><br />    depend on n :<br />        n = 0 : → 0;<br />        n = 1 : → 1;<br />        n &gt; 1 : → Fibonacci(n–1) + Fibonacci(n–2)<br />____________________</p><p> </p>2. Algoritma Faktorial Secara Rekursif<p>Berdasarkan definisi, faktorial dari sebuah bilangan bulat tak-negatif [tex]n[/tex] dinyatakan oleh:</p><p>[tex]\begin{aligned}n!=\begin{cases}1,&amp;{\rm jika\ }n=0;\\1,&amp;{\rm jika\ }n=1;\\n(n-1),&amp;{\rm jika\ }n &gt; 1.\\\end{cases}\end{aligned}[/tex]</p><p>Maka, algoritma program utama dan fungsi faktorial secara rekursif adalah sebagai berikut.</p><p><strong>Program</strong><strong> NilaiFaktorial<br />Kamus:</strong><br />    n : integer ≥ 0<br />    function Faktorial(n : integer ≥ 0) → integer<br />    {Diberikan n, menghitung n!}<br /><strong>Algoritma:</strong><br />    input(n)<br />    output(Faktorial(n))<br />____________________</p><p><strong>function</strong> Faktorial(n : integer ≥ 0) → integer<br />{Diberikan n, menghitung n!}<br /><strong>Kamus lokal:</strong><br />    {tidak ada}<br /><strong>Algoritma:</strong><br />    depend on n :<br />        n = 0 : → 1;<br />        n = 1 : → 1;<br />        n &gt; 1 : → n * Faktorial(n–1)<br />____________________</p><p> </p>Detail Jawaban<p>Mata Pelajaran: Informatika (TIK)<br />Materi: Algoritma dan Pemrograman</p><p></p><br />
                                            <h2 class="ez-toc-section" id="buat-algoritma-untuk-mencetak-nama-anda-sebanyak-5-kali-dengan-prosedur-rekursif%e2%80%8b">
                            2. buat algoritma untuk mencetak nama anda sebanyak 5 kali dengan prosedur rekursif​</h2><br />
                        <p><strong>Jawaban &amp; Penjelasan:</strong></p><p><strong></strong></p><p>Algoritma digunakan untuk mempermudah dalam pengaplikasian rencana pembuatan program ke client atau user.</p><p></p><p>Algoritma dari keterangan 'mencetak nama anda sebanyak 5 kali dengan prosedur rekursif' adalah (metode deskriptif):</p><p></p><p>'''</p><p></p><p>Algoritma Luas_Lingkaran
</p><p>{Mencetak nama anda sebanyak 5 kali. Algoritma menerima masukan nama, memanggil fungsi rekursif berisi perulangan, lalu mencetak namanya}
</p><p>
</p><p>Deklarasi:
</p><p>namaAnda {tipe data char/karakter}
</p><p>angkaPerulangan = 1 {tipe data integer/bilangan bulat}
</p><p>
</p><p>Deskripsi
:</p><p>1. Baca dan terima input variabel namaAnda.
</p><p>2. Panggil fungsi rekursif.</p><p>3. Fungsi rekursif berisi 'ketika(angkaPerulangan &lt; 6) maka cetak variabel namaAnda'.</p><p>4. Perulangan WHILE (ketika) tiap-tiap perulangannya, isi variabel angkaPerulangan ditambah 1. Jika angkaPerulangan mencapai nilai lebih besar dari 5, maka perulangan dan fungsi rekursif berhenti.</p><p>5. 5 kali nama anda akan ditampilkan berupa output.</p><p>6. Selesai.</p><p></p><p>'''</p><p></p><p>Semoga membantu.</p><p></p><strong>- M.Fazri Nizar / TI</strong><br />
                                            <h2 class="ez-toc-section" id="buat-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            3. Buat algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif ?</h2><br />
                        <p><strong>Jawaban:</strong></p>Bisa dengan menggunakan fungsi rekursif dengan perulangan For.<p></p><p><strong>Penjelasan:</strong></p><p></p><p>Logikanya seperti berikut:</p>Buat fungsi rekursif.Deklarasi variabel angkaPerulangan untuk angka perulangan dan beri nilai 0 di dalam fungsi rekursif.Buat struktur perulangan For untuk mencetak nama anda sebanyak 100 kali.Panggil fungsi rekursif.Selesai.<p></p><p>Programnya:</p><p>'''</p><p></p><p>def rekursif():</p><p>    angkaPerulangan = 0</p><p>    for angkaPerulangan in range (0, 100):</p><p>        print("Nama saya M.Fazri Nizar")</p><p></p><p>#panggil fungsi rekursif</p><p>rekursif()</p><p></p><p>'''</p><p></p><p>Semoga membantu.</p><strong>- M.Fazri Nizar / TI</strong><br />
                                            <h2 class="ez-toc-section" id="1-buat-algoritma-untuk-mencetak-deret-angka-135-sd-100-angka-dengan-menggunakan-prosedur-rekursif-menggunakan-program-phyton-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-deng">
                            4. 1. buat algoritma untuk mencetak deret angka 1,3,5...s/d 100 angka dengan menggunakan prosedur rekursif menggunakan program phyton.
2. buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif menggunakan program phyton.</h2><br />
                        <p><strong>Jawaban:</strong></p><p>i = 1
</p><p>
</p><p>while i &lt;=100:
</p><p>  print(i)
</p><p>  i += 2</p><p></p><p>Code bahasa Python, simpan dengan format py misal : "nama.py" </p><p>tanpa tanda kutip</p><br />
                                            <h2 class="ez-toc-section" id="1-buat-algoritma-untuk-mencetak-deret-angka%c2%a0-135-sd-1000-angka-dengan-menggunakan-prosedur-rekursif-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            5. 1. Buat algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif.2. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </h2><br />
                        <p>1. Algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;
</p><p>void printNumber(int x)
</p><p>{  </p><p>	if(x &lt; 1000){
</p><p>  printf("%i ", x);
</p><p>  printNumber(x+2);
</p><p>	}
</p><p>}
</p><p>
</p><p>int main()
</p><p>{
</p><p>	printNumber(1);
</p><p>	return 0;
</p><p>}</p><br /><p>2. Algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;  </p><p>void printNama(char nama[], int jumlah)
</p><p>{
</p><p>	printf("%s\n", nama);
</p><p>	jumlah --;
</p><p>	if(jumlah &gt; 0)	printNama(nama, jumlah);
</p><p>}
</p><p>
int main()
</p><p>{
</p><p>	char nama[50];
</p><p>	printf("masukan nama Anda : ");
</p><p>	scanf("%s", nama);
</p><p>	printNama(nama, 100);
</p><p>}</p>Pembahasan<p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Contoh penerapan rekursi lainnya yaitu pada program menghitung deret fibonacci.</p><p>#include &lt;stdio.h&gt;
</p><p>#include &lt;conio.h&gt;
</p><p>int hitung_fibonacci(int f)  //menghitung Fibonacci
</p><p>{
</p><p>	if(f==0 || f==1) return 1;
</p><p>	else
</p><p>	{
</p><p>  return hitung_fibonacci(f-2)+hitung_fibonacci(f-1);
</p><p>	}
</p><p>}
</p><p>
</p><p>int deret_fibonacci(int x,int n)	//mencetak n deret Fibonacci
</p><p>{
</p><p>	if(x==n) return 1;	//penghentian rekursi
</p><p>	else
</p><p>	{
</p><p>  printf("%i ",hitung_fibonacci(x));
</p><p>  return deret_fibonacci(x+1,n);
</p><p>	}
</p><p>}
</p><p>
</p><p>void main()
</p><p>{
</p><p>	int in,i=0;
</p><p>	clrscr();
</p><p>	printf("Masukkan panjang deret Fibonacci : ");
</p><p>	scanf("%i",&amp;in);
</p><p>	deret_fibonacci(i,in);
</p><p>	getch();
</p><p>}
</p><p>
</p><p>Fibonacci adalah deret matematika dimana suatu angka merupakan jumlah kedua bilangan di depannya. Misal diinginkan 5 deret maka hasilnya : 1 1 2 3 5. Dua bilangan pertama dalam Fibonacci adalah 1 1.
</p><p>
</p><p>Awal program :
</p><p>Misal input=5. Program akan meloncat ke deret_fibonacci dengan passing parameter ‘i=0’ &amp; ‘in=5’ atau deret_fibonacci(0,5). Di dalam deret_fibonacci passing parameter diterima dengan variable ‘x’ dan ‘n’ sehingga ‘x=0’ &amp; ‘n=5’. </p><p>Dicek apakah x=n, jika ya rekusi berhenti sebaliknya jika tidak rekursi terus berjalan. Karena x≠n maka program berjalan ke bawah (masuk ke “else”). Lihat syntax “printf”, dimana bilangan yang dicetak adalah nilai kembalian hitung_fibonacci(x), sehingga program akan meloncat ke fungsi tersebut dengan passing parameter ‘x=0’ atau hitung_fibonacci(0). </p><p>Dalam hitung_fibonacci passing parameter diterima dengan variable ‘f’ sehingga ‘f=0’. Karena f=0 maka hitung_fibonacci langsung mengembalikan nilai 1 (lihat “if” di awal fungsi). Karena nilai kembalian hitung_fibonacci merupakan nilai yang dicetak di layar maka program akan mencetak angka 1. </p><p>Setelah dicetak maka program akan melakukan pemanggilan dirinya sendiri yang terlihat pada syntax return deret_fibonacci(x+1,n). Syntax inilah yang dinamakan rekursi. </p><p>Jadi fungsi deret_fibonacci akan memanggil dirinya sendiri atau dapat dituliskan deret_fibonacci(1,5), dimana passing parameter 1 merupakan x+1 atau 0+1 dimana ‘x=0’.
</p><p>Rekursi pertama :
</p><p>•	Panggil hitung_fibonacci(1) karena x=1.
</p><p>•	Masuk hitung_fibonacci, f=1 jadi return value =1 (masih masuk “if”).
</p><p>•	Kembali ke deret_fibonacci lalu cetak 1.
</p><p>•	Rekursi deret_fibonacci(2,5).
</p><p>
</p><p>Rekursi kedua :
</p><p>•	Panggil hitung_fibonacci(2) karena x=2.
</p><p>•	Masuk hitung_fibonacci, f=2 masuk ke “else” (lihat syntax-nya, ada rekursi!)
</p><p>	hitung_fibonacci(f) = hitung_fibonacci(f-2)+hitung_fibonacci(f-1)
</p><p>	hitung_fibonacci(2) = hitung_fibonacci(0)+hitung_fibonacci(1)
</p><p>                = 1 + 1
</p><p>                = 2
</p><p>•	Kembali ke deret_fibonacci lalu cetak 2.
</p><p>•	Rekursi deret_fibonacci(3,5).
</p><p>
</p><p>Rekursi ketiga :
</p><p>•	Panggil hitung_fibonacci(3) karena x=3.
</p><p>•	Masuk hitung_fibonacci, f=3 masuk ke “else”.
</p><p>	hitung_fibonacci(3) = hitung_fibonacci(1) + hitung_fibonacci(2)
</p><p>                             = 1 + hitung_fibonacci(1)+hitung_fibonacci(0)  </p><p>                = 1 + 1 +1
</p><p>                = 3  </p><p>•	Kembali ke deret_fibonacci lalu cetak 3.
</p><p>•	Rekursi deret_fibonacci(4,5).
</p><p>
</p><p>Rekursi keempat :
</p><p>•	Panggil hitung_fibonacci(4) karena x=4.
</p><p>•	Masuk hitung_fibonacci, f=4 masuk ke “else”.
</p><p>	hitung_fibonacci(4) = hitung_fibonacci(2) + hitung_fibonacci(3)
</p><p>                     =hitung_fibonacci(0)+hitung_fibonacci(1) + hitung_fibonacci(3)
</p><p>                             = 1 + 1 + hitung_fibonacci(3)
</p><p>                             = 1 + 1 + hitung_fibonacci(1) + hitung_fibonacci(2)
</p><p>                  = 1 + 1 + 1 + hitung_fibonacci(0)+hitung_fibonacci(1)
</p><p>                  = 1 + 1 + 1 + 1 + 1
</p><p>       = 5
</p><p>•	Kembali ke deret_fibonacci lalu cetak 5.
</p><p>•	Rekursi deret_fibonacci(5,5).
</p><p>
</p><p>Rekursi kelima :
</p><p>•	Karena x=n=5 maka rekursi akan berhenti. Penghentian rekursi ini ditandai return 1.
</p><p>•	Hasil di layar akan tercetak 1 1 2 3 5.
</p><p>
</p><p>Contoh di atas termasuk Nested Recursion yaitu di dalam sebuah rekursi terdapat rekursi yang lain. Kalau anda paham, pasti terlihat bahwa di dalam rekursi deret_fibonacci terdapat rekursi hitung_fibonacci.  </p><br />Pelajari lebih lanjut<p>penyelesaian pseudocode dan flowchart untuk kasus mahasiswa bisa dinyatakan lulus https://brainly.co.id/tugas/18543373</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci</strong> : prosedur Rekursif</p><p>Rekursif merupakan fungsi yang memanggil fungsi itu sendiri dalam proses eksekusinya. Proses pemanggilan tersebut yang disebut rekursi. Agar tidak terjadi proses rekursi yang tak terhingga maka diperlukan kondisi berhenti untuk fungsi tersebut. Namun resource memori yang digunakan cendurung lebih besar, karena fungsi akan berulang secara terus menerus</p><br /><p><strong>Pembahasan</strong></p><p><strong>1. Deret angka</strong></p><p>public class deret</p><br /><p>{  </p><p>	public static int tambah(int n) {</p><br /><p>  if (n &gt;= 1000){</p><br /><p>  	return 0;</p><br /><p>  }</p><br /><p>  else</p><br /><p>  	return tambah(n+2) + n;</p><br /><p>	}</p><br /><p>  </p><p>    public static void main(String[] args)  </p><p>    {</p><br /><p>        System.out.println("Total :" + tambah(1));</p><br /><p>    }</p><br /><p>}</p><p>pada kasus ini, kondisi berhenti terdapat pada  if (n &gt;= 1000). jika n belum lebih besar atau sama dengan 1000 maka fungsi akan memanggil dirinya sendiri dan terus melakukan proses penjumlahan angka hingga kondisi berhenti terpenuhi.</p><p><strong>2. Cetak nama</strong></p><p>public class cetak</p><br /><p>{  </p><p>	static int n=0;  </p><br /><p>	public static void cetak() {</p><br /><p>  n++;  </p><br /><p>  if(n&lt;=100){  </p><br /><p>  	System.out.println("Cetak nama anda ke-"+n);  </p><br /><p>  	cetak();  </p><br /><p>  }  </p><br /><p>	}  </p><br /><p>    </p><br /><p>    public static void main(String[] args)  </p><p>    {</p><br /><p>  cetak();</p><br /><p>    }</p><p>}</p><p>sedangkan untuk kasus kedua, kondisi berhenti terdapat pada    if(n&lt;=100). Jika n belum lebih besar atau sama dengan 100 maka fungsi akan memanggil dirinya sendiri dan terus melakukan pencetakan nama hingga kondisi berhenti terpenuhi.</p><br /><p><strong>Detil jawaban</strong></p><p>Mapel: TiK</p><br /><p><strong>Kata Kunci</strong>: perulangan, rekursif, rekursi, java</p><br />
                                            <h2 class="ez-toc-section" id="buat-algoritma-untuk-mencetak-deret-angka-1-3-5-sd-1000-angka-dengan-menggunakan-prosedur-rekursif">
                            6. Buat algoritma untuk mencetak deret angka 1, 3, 5, ... s/d 1000 angka dengan menggunakan prosedur rekursif</h2><br />
                        <p>Algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><br /><p>#include&lt;stdio.h&gt;</p><p>void printNumber(int x)</p><p>{  </p><p> if(x &lt; 1000){</p><p>  printf("%i ", x);</p><p>  printNumber(x+2);</p><p> }</p><p>}</p><p>int main()</p><p>{</p><p> printNumber(1);</p><p> return 0;</p><p>}</p><br />Pembahasan<p><strong>Pengertian Algoritma</strong></p><p>Algoritma adalah susunan logis dan sistematis dari langkah-langkah untuk memecahkan atau menyelesaikan suatu permasalahan. Misalnya adalah langkah – langkah untuk memasak mie instan, langkah – langkah yang dapat kita temukan di balik bungkus mie instan tersebut juga dapat kita sebut sebagai sebuah algoritma karena merupakan langkah-langkah untuk menyelesaikan permasalahan yaitu memasak mi instan menjadi matang.</p><p>Semakin kompleks suatu algoritma, semakin banyak pula statement di dalamnya dan tidak selamanya berurutan. Statement-statement ini perlu diseleksi dan disesuaikan dengan permasalahan dan prosedur menyelesaikan suatu masalah. Proses penyeleksian statement inilah yang disebut dengan percabangan.</p><p><strong>Pengertian rekursi</strong></p><p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Contoh penerapan rekursi lainnya yaitu pada program menghitung deret fibonacci.</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>int hitung_fibonacci(int f)  //menghitung Fibonacci</p><p>{</p><p> if(f==0 || f==1) return 1;</p><p> else</p><p> {</p><p>  return hitung_fibonacci(f-2)+hitung_fibonacci(f-1);</p><p> }</p><p>}</p><p>int deret_fibonacci(int x,int n)	//mencetak n deret Fibonacci</p><p>{</p><p> if(x==n) return 1;	//penghentian rekursi</p><p> else</p><p> {</p><p>  printf("%i ",hitung_fibonacci(x));</p><p>  return deret_fibonacci(x+1,n);</p><p> }</p><p>}</p><p>void main()</p><p>{</p><p> int in,i=0;</p><p> clrscr();</p><p> printf("Masukkan panjang deret Fibonacci : ");</p><p> scanf("%i",&amp;in);</p><p> deret_fibonacci(i,in);</p><p> getch();</p><p>}</p><p>Fibonacci adalah deret matematika dimana suatu angka merupakan jumlah kedua bilangan di depannya. Misal diinginkan 5 deret maka hasilnya : 1 1 2 3 5. Dua bilangan pertama dalam Fibonacci adalah 1 1.</p><p>Contoh di atas termasuk Nested Recursion yaitu di dalam sebuah rekursi terdapat rekursi yang lain. Kalau anda paham, pasti terlihat bahwa di dalam rekursi deret_fibonacci terdapat rekursi hitung_fibonacci.  </p><br />Pelajari lebih lanjut<p>Program untuk mencetak deret yang dimulai dari 1 hingga n dengan n adalah bilangan bulat positif brainly.co.id/tugas/18575574</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci </strong>: algoritma dengan prosedur rekursif</p><br />
                                            <h2 class="ez-toc-section" id="algoritma-menghitung-bilangan-faktorial-dengan-menggunakan-perulangan-while-dan-fungsi-rekursif">
                            7. algoritma menghitung bilangan faktorial dengan menggunakan perulangan while dan fungsi rekursif</h2><br />
                        <p><strong>Jawaban:</strong></p><p>jawaban terlampir dalam bahasa python</p><p></p><p><strong>kalau bermanfaat jadikan jawaban terbaik ya ka :)</strong></p><p></p><p>note:</p><p>n adalah input angka yg ingin dicari faktorialnya</p><br />
                                            <h2 class="ez-toc-section" id="buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            8. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </h2><br />
                        <p>Algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;  </p><p>void printNama(char nama[], int jumlah)</p><p>{</p><p> printf("%s\n", nama);</p><p> jumlah --;</p><p> if(jumlah &gt; 0)	printNama(nama, jumlah);</p><p>}</p><br /><p>int main()</p><p>{</p><p> char nama[50];</p><p> printf("masukan nama Anda : ");</p><p> scanf("%s", nama);</p><p> printNama(nama, 100);</p><p>}</p><br />Pembahasan<p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Contoh penerapan rekursi lainnya yaitu pada program menghitung deret fibonacci.</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>int hitung_fibonacci(int f)  //menghitung Fibonacci</p><p>{</p><p> if(f==0 || f==1) return 1;</p><p> else</p><p> {</p><p>  return hitung_fibonacci(f-2)+hitung_fibonacci(f-1);</p><p> }</p><p>}</p><p>int deret_fibonacci(int x,int n)	//mencetak n deret Fibonacci</p><p>{</p><p> if(x==n) return 1;	//penghentian rekursi</p><p> else</p><p> {</p><p>  printf("%i ",hitung_fibonacci(x));</p><p>  return deret_fibonacci(x+1,n);</p><p> }</p><p>}</p><p>void main()</p><p>{</p><p> int in,i=0;</p><p> clrscr();</p><p> printf("Masukkan panjang deret Fibonacci : ");</p><p> scanf("%i",&amp;in);</p><p> deret_fibonacci(i,in);</p><p> getch();</p><p>}</p><p>Fibonacci adalah deret matematika dimana suatu angka merupakan jumlah kedua bilangan di depannya. Misal diinginkan 5 deret maka hasilnya : 1 1 2 3 5. Dua bilangan pertama dalam Fibonacci adalah 1 1.</p><p>Awal program :</p><p>Misal input=5. Program akan meloncat ke deret_fibonacci dengan passing parameter ‘i=0’ &amp; ‘in=5’ atau deret_fibonacci(0,5). Di dalam deret_fibonacci passing parameter diterima dengan variable ‘x’ dan ‘n’ sehingga ‘x=0’ &amp; ‘n=5’. </p><p>Dicek apakah x=n, jika ya rekusi berhenti sebaliknya jika tidak rekursi terus berjalan. Karena x≠n maka program berjalan ke bawah (masuk ke “else”). Lihat syntax “printf”, dimana bilangan yang dicetak adalah nilai kembalian hitung_fibonacci(x), sehingga program akan meloncat ke fungsi tersebut dengan passing parameter ‘x=0’ atau hitung_fibonacci(0). </p><p>Dalam hitung_fibonacci passing parameter diterima dengan variable ‘f’ sehingga ‘f=0’. Karena f=0 maka hitung_fibonacci langsung mengembalikan nilai 1 (lihat “if” di awal fungsi). Karena nilai kembalian hitung_fibonacci merupakan nilai yang dicetak di layar maka program akan mencetak angka 1. </p><p>Setelah dicetak maka program akan melakukan pemanggilan dirinya sendiri yang terlihat pada syntax return deret_fibonacci(x+1,n). Syntax inilah yang dinamakan rekursi. </p><p>Jadi fungsi deret_fibonacci akan memanggil dirinya sendiri atau dapat dituliskan deret_fibonacci(1,5), dimana passing parameter 1 merupakan x+1 atau 0+1 dimana ‘x=0’.</p><p>Contoh di atas termasuk Nested Recursion yaitu di dalam sebuah rekursi terdapat rekursi yang lain. Kalau anda paham, pasti terlihat bahwa di dalam rekursi deret_fibonacci terdapat rekursi hitung_fibonacci.  </p><br />Pelajari lebih lanjut<p>penyelesaian pseudocode dan flowchart untuk kasus mahasiswa bisa dinyatakan lulus brainly.co.id/tugas/18543373</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci</strong> : prosedur Rekursif</p><br />
                                            <h2 class="ez-toc-section" id="1-buat-algoritma-untuk-mencetak-deret-angka-135-sd-100-angka-dengan-menggunakan-prosedur-rekursif2-buat-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            9. 1. Buat algoritma untuk mencetak deret angka 1,3,5,.... s/d 100 angka dengan menggunakan prosedur rekursif
2. Buat algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif</h2><br />
                        <p><strong>Jawaban:</strong></p><p></p><p>2. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif .</p><p></p><p><strong>Penjelasan:</strong></p><p>maaf kalo salah </p><br />
                                            <h2 class="ez-toc-section" id="buat-algoritma-untuk-mencetak-deret-angka-1-3-5-sd-1000-angka-dengan-menggunakan-prosedur-rekursif">
                            10. Buat algoritma untuk mencetak deret angka 1, 3, 5, ... s/d 1000 angka dengan menggunakan prosedur rekursif</h2><br />
                        <p>Algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;</p><p>void printNumber(int x)</p><p>{  </p><p> if(x &lt; 1000){</p><p>  printf("%i ", x);</p><p>  printNumber(x+2);</p><p> }</p><p>}</p><p>int main()</p><p>{</p><p> printNumber(1);</p><p> return 0;</p><p>}</p>Pembahasan<p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Contoh penerapan rekursi lainnya yaitu pada program menghitung deret fibonacci.</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>int hitung_fibonacci(int f)  //menghitung Fibonacci</p><p>{</p><p> if(f==0 || f==1) return 1;</p><p> else</p><p> {</p><p>  return hitung_fibonacci(f-2)+hitung_fibonacci(f-1);</p><p> }</p><p>}</p><p>int deret_fibonacci(int x,int n)	//mencetak n deret Fibonacci</p><p>{</p><p> if(x==n) return 1;	//penghentian rekursi</p><p> else</p><p> {</p><p>  printf("%i ",hitung_fibonacci(x));</p><p>  return deret_fibonacci(x+1,n);</p><p> }</p><p>}</p><p>void main()</p><p>{</p><p> int in,i=0;</p><p> clrscr();</p><p> printf("Masukkan panjang deret Fibonacci : ");</p><p> scanf("%i",&amp;in);</p><p> deret_fibonacci(i,in);</p><p> getch();</p><p>}</p><p>Fibonacci adalah deret matematika dimana suatu angka merupakan jumlah kedua bilangan di depannya. Misal diinginkan 5 deret maka hasilnya : 1 1 2 3 5. Dua bilangan pertama dalam Fibonacci adalah 1 1.</p><p>Contoh di atas termasuk Nested Recursion yaitu di dalam sebuah rekursi terdapat rekursi yang lain. Kalau anda paham, pasti terlihat bahwa di dalam rekursi deret_fibonacci terdapat rekursi hitung_fibonacci.  </p><br />Pelajari lebih lanjut<p>contoh soal dengan algoritma rekursif lainnya https://brainly.co.id/tugas/18674664</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci</strong> : prosedur Rekursif</p><br />
                                            <h2 class="ez-toc-section" id="contoh-program-c-rekursif-beserta-flowchartnya">
                            11. contoh program c++ rekursif beserta flowchartnya</h2><br />
                        klo tentang IT bisa PC... <br />
                                            <h2 class="ez-toc-section" id="1-buat-algoritma-untuk-mencetak-deret-angka%c2%a0-135-sd-1000-angka-dengan-menggunakan-prosedur-rekursif-2-buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            12. 1. Buat algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif.2. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif menggunakan cout,</h2><br />
                        <p>1. Algoritma untuk mencetak deret angka  1,3,5...s/d 1000 angka dengan menggunakan prosedur Rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;</p><p>void printNumber(int x)</p><p>{  </p><p> if(x &lt; 1000){</p><p>  printf("%i ", x);</p><p>  printNumber(x+2);</p><p> }</p><p>}</p><p>int main()</p><p>{</p><p> printNumber(1);</p><p> return 0;</p><p>}</p><br /><p>2. Algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;  </p><p>void printNama(char nama[], int jumlah)</p><p>{</p><p> printf("%s\n", nama);</p><p> jumlah --;</p><p> if(jumlah &gt; 0)	printNama(nama, jumlah);</p><p>}</p><p>int main()</p><p>{</p><p> char nama[50];</p><p> printf("masukan nama Anda : ");</p><p> scanf("%s", nama);</p><p> printNama(nama, 100);</p><p>}</p>Pembahasan<p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Sifat pemanggilan fungsi atau prosedur, yaitu program akan kembali ke baris dimana suatu prosedur atau fungsi tersebut dipanggil. Jadi di dalam rekursi, pemanggilan prosedur dari dalam sebuah prosedur tersebut harus disertai kondisi dimana pemanggilan dirinya sendiri diakhiri. kalau tidak akan menjadi infinite loop dan program tidak akan berakhir.</p><br />Pelajari lebih lanjut<p>penyelesaian pseudocode dan flowchart untuk kasus mahasiswa bisa dinyatakan lulus brainly.co.id/tugas/18543373</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci</strong> : prosedur Rekursif</p><br />
                                            <h2 class="ez-toc-section" id="buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            13. buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif</h2><br />
                        prt " nama"<br />x=x+1<br />if x&gt;=100<br />goto<br />end<br /><br /><br />
                                            <h2 class="ez-toc-section" id="buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif">
                            14. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif </h2><br />
                        <p>Algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif dalam bahasa pemrograman C adalah sebagai berikut</p><p>#include&lt;stdio.h&gt;  </p><p>void printNama(char nama[], int jumlah)</p><p>{</p><p> printf("%s\n", nama);</p><p> jumlah --;</p><p> if(jumlah &gt; 0)	printNama(nama, jumlah);</p><p>}</p><p>int main()</p><p>{</p><p> char nama[50];</p><p> printf("masukan nama Anda : ");</p><p> scanf("%s", nama);</p><p> printNama(nama, 100);</p><p>}</p>Pembahasan<p>Rekursi adalah penerapan konsep function/fungsi lebih lanjut. Rekursi dalam pemrograman berarti suatu proses dari fungsi yang memanggil dirinya sendiri secara berulang-ulang sampai ada kondisi yang mengakhiri proses tersebut. Jika kita dapat menggunakan fungsi rekursi dengan baik, ada beberapa kasus perulangan yang rumit dapat dilakukan dengan mudah.</p><p>Contoh penerapan rekursi lainnya yaitu pada program menghitung deret fibonacci.</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;conio.h&gt;</p><p>int hitung_fibonacci(int f)  //menghitung Fibonacci</p><p>{</p><p> if(f==0 || f==1) return 1;</p><p> else</p><p> {</p><p>  return hitung_fibonacci(f-2)+hitung_fibonacci(f-1);</p><p> }</p><p>}</p><p>int deret_fibonacci(int x,int n)	//mencetak n deret Fibonacci</p><p>{</p><p> if(x==n) return 1;	//penghentian rekursi</p><p> else</p><p> {</p><p>  printf("%i ",hitung_fibonacci(x));</p><p>  return deret_fibonacci(x+1,n);</p><p> }</p><p>}</p><p>void main()</p><p>{</p><p> int in,i=0;</p><p> clrscr();</p><p> printf("Masukkan panjang deret Fibonacci : ");</p><p> scanf("%i",&amp;in);</p><p> deret_fibonacci(i,in);</p><p> getch();</p><p>}</p><br /><p>Fibonacci adalah deret matematika dimana suatu angka merupakan jumlah kedua bilangan di depannya. Misal diinginkan 5 deret maka hasilnya : 1 1 2 3 5. Dua bilangan pertama dalam Fibonacci adalah 1 1.</p><p>Awal program :</p><p>Misal input=5. Program akan meloncat ke deret_fibonacci dengan passing parameter ‘i=0’ &amp; ‘in=5’ atau deret_fibonacci(0,5). Di dalam deret_fibonacci passing parameter diterima dengan variable ‘x’ dan ‘n’ sehingga ‘x=0’ &amp; ‘n=5’. </p><p>Dicek apakah x=n, jika ya rekusi berhenti sebaliknya jika tidak rekursi terus berjalan. Karena x≠n maka program berjalan ke bawah (masuk ke “else”). Lihat syntax “printf”, dimana bilangan yang dicetak adalah nilai kembalian hitung_fibonacci(x), sehingga program akan meloncat ke fungsi tersebut dengan passing parameter ‘x=0’ atau hitung_fibonacci(0). </p><p>Dalam hitung_fibonacci passing parameter diterima dengan variable ‘f’ sehingga ‘f=0’. Karena f=0 maka hitung_fibonacci langsung mengembalikan nilai 1 (lihat “if” di awal fungsi). Karena nilai kembalian hitung_fibonacci merupakan nilai yang dicetak di layar maka program akan mencetak angka 1. </p><p>Setelah dicetak maka program akan melakukan pemanggilan dirinya sendiri yang terlihat pada syntax return deret_fibonacci(x+1,n). Syntax inilah yang dinamakan rekursi. </p><p>Jadi fungsi deret_fibonacci akan memanggil dirinya sendiri atau dapat dituliskan deret_fibonacci(1,5), dimana passing parameter 1 merupakan x+1 atau 0+1 dimana ‘x=0’.</p><p>Contoh di atas termasuk Nested Recursion yaitu di dalam sebuah rekursi terdapat rekursi yang lain. Kalau anda paham, pasti terlihat bahwa di dalam rekursi deret_fibonacci terdapat rekursi hitung_fibonacci.  </p><br />Pelajari lebih lanjut<p>penyelesaian pseudocode dan flowchart untuk kasus mahasiswa bisa dinyatakan lulus brainly.co.id/tugas/18543373</p><br />Detil Jawaban<p><strong>Kelas </strong>: 10</p><p><strong>Bab </strong>: Mengenal Pemrograman Komputer</p><p><strong>Kata Kunci </strong>: prosedur Rekursif</p><br />
                                            <h2 class="ez-toc-section" id="buatlah-algoritma-untuk-mencetak-nama-anda-sebanyak-100-kali-dengan-prosedur-rekursif-pada-python%e2%80%8b">
                            15. Buatlah algoritma untuk mencetak nama anda sebanyak 100 kali dengan prosedur rekursif pada python​</h2><br />
                        <p>itu contoh algoritma nya yah yg diatas makasihh semoga membantuu</p><br />
                    
                </div>
                <div class="youtubeVideo" style="text-align: center">
                    <h3>Video Terkait</h3>
                    <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/82GMgDfIhWY?controls=0" frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"allowfullscreen></iframe>
                </div>
                <footer class="entry-meta" aria-label="Meta postingan">
                    <span class="cat-links"><span class="gp-icon icon-categories"><svg viewBox="0 0 512 512"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                                <path
                                    d="M0 112c0-26.51 21.49-48 48-48h110.014a48 48 0 0143.592 27.907l12.349 26.791A16 16 0 00228.486 128H464c26.51 0 48 21.49 48 48v224c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112z">
                                </path>
                            </svg></span><span class="screen-reader-text">Kategori </span>ti</span>
            </div>
        </article>
    </main>
            </div>
            <div class="widget-area sidebar is-right-sidebar" id="right-sidebar">
                <div class="inside-right-sidebar">
                    <aside id="categories-2" class="widget inner-padding widget_categories">
                        <h2 class="widget-title">Topik</h2>
                        <ul>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/soal-uas-ips-kelas-2-semester-1-dan-kunci-jawaban/">Soal Uas Ips Kelas 2 Semester 1 Dan Kunci Jawaban</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/biografi-habib-taufiq-assegaf/">Biografi Habib Taufiq Assegaf</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/jadwal-utbk-2023-gelombang-1/">Jadwal Utbk 2023 Gelombang 1</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/rpp-matematika-kelas-6-semester-2-revisi-2018/">Rpp Matematika Kelas 6 Semester 2 Revisi 2018</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/kisi-kisi-uts-kelas-1-sd-semester-2/">Kisi-kisi Uts Kelas 1 Sd Semester 2</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/usbn-kemdikbud-go-id-2018/">Usbn.kemdikbud.go.id 2018</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/soal-uts-ips-kelas-9-semester-1-dan-kunci-jawaban/">Soal Uts Ips Kelas 9 Semester 1 Dan Kunci Jawaban</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/hukum-stokes-viskositas/">Hukum Stokes Viskositas</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/soal-bahasa-inggris-kelas-1-sd-tentang-part-of-body/">Soal Bahasa Inggris Kelas 1 Sd Tentang Part Of Body</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/download-lagu-dhayo-haw/">Download Lagu Dhayo Haw</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/cerita-saat-liburan/">Cerita Saat Liburan</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/prota-dan-promes-kelas-3-sd-kurikulum-2013-revisi-2017/">Prota Dan Promes Kelas 3 Sd Kurikulum 2013 Revisi 2017</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/kunci-gitar-ngalahin-gumi/">Kunci Gitar Ngalahin Gumi</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/ganool-running-man/">Ganool Running Man</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/tts-level-50/">Tts Level 50</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/uji-two-way-anova/">Uji Two Way Anova</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/contoh-soal-pembuatan-sim/">Contoh Soal Pembuatan Sim</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/download-lagu-mpeg/">Download Lagu Mpeg</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/kursus-menjahit-tangerang/">Kursus Menjahit Tangerang</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/bagi-bagi-char-cf/">Bagi Bagi Char Cf</a>
                                </li>
                                                    </ul>

                    </aside>
                </div>
            </div>

        </div>
    </div>
    <div class="site-footer">
        <footer class="site-info" aria-label="Situs" itemtype="https://schema.org/WPFooter" itemscope>
            <div class="inside-site-info grid-container">
                <div class="copyright-bar">
                    <span class="copyright">&copy; 2023 <a href="https://anakpramuka.github.io"
                            itemprop="url">BELAJAR</a></span>
                </div>
            </div>
        </footer>
    </div>

    <a title="Gulirkan kembali ke puncak laman" aria-label="Gulirkan kembali ke puncak laman" rel="nofollow"
        href="#" class="generate-back-to-top" data-scroll-speed="400" data-start-scroll="300">
        <span class="gp-icon icon-arrow-up"><svg viewBox="0 0 330 512" aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill-rule="evenodd"
                clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414">
                <path
                    d="M305.863 314.916c0 2.266-1.133 4.815-2.832 6.514l-14.157 14.163c-1.699 1.7-3.964 2.832-6.513 2.832-2.265 0-4.813-1.133-6.512-2.832L164.572 224.276 53.295 335.593c-1.699 1.7-4.247 2.832-6.512 2.832-2.265 0-4.814-1.133-6.513-2.832L26.113 321.43c-1.699-1.7-2.831-4.248-2.831-6.514s1.132-4.816 2.831-6.515L158.06 176.408c1.699-1.7 4.247-2.833 6.512-2.833 2.265 0 4.814 1.133 6.513 2.833L303.03 308.4c1.7 1.7 2.832 4.249 2.832 6.515z"
                    fill-rule="nonzero" />
            </svg></span>
    </a>
    <script id="generate-a11y">
        ! function() {
            "use strict";
            if ("querySelector" in document && "addEventListener" in window) {
                var e = document.body;
                e.addEventListener("mousedown", function() {
                    e.classList.add("using-mouse")
                }), e.addEventListener("keydown", function() {
                    e.classList.remove("using-mouse")
                })
            }
        }();
    </script>
    <!--[if lte IE 11]>
<script src='https://anakpramuka.github.io/js/classList.min.js' ?ver=3.2.4' id='generate-classlist-js'></script>
<![endif]-->
    <script id='generate-menu-js-extra'>
        var generatepressMenu = {
            "toggleOpenedSubMenus": "1",
            "openSubMenuLabel": "Buka Submenu",
            "closeSubMenuLabel": "Tutup submenu"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/menu.min.js' ?ver=3.2.4' id='generate-menu-js'></script>
    <script id='generate-navigation-search-js-extra'>
        var generatepressNavSearch = {
            "open": "Buka Kolom Pencarian",
            "close": "Tutup Kolom Pencarian"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/navigation-search.min.js' ?ver=3.2.4' id='generate-navigation-search-js'></script>
    <script id='generate-back-to-top-js-extra'>
        var generatepressBackToTop = {
            "smooth": "1"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/back-to-top.min.js' ?ver=3.2.4' id='generate-back-to-top-js'></script>
    <script type='text/javascript' src='//jd3j7g5z1fqs.com/96/78/7a/96787a1945876b1a9c10f79941441964.js'></script>
<script type='text/javascript' src='//jd3j7g5z1fqs.com/b4/f1/ef/b4f1ef8dfe59b7fa68754094cf6c8e0e.js'></script>
  <!-- Histats.com  START  (aync)-->
<script type="text/javascript">var _Hasync= _Hasync|| [];
_Hasync.push(['Histats.start', '1,4739059,4,0,0,0,00010000']);
_Hasync.push(['Histats.fasi', '1']);
_Hasync.push(['Histats.track_hits', '']);
(function() {
var hs = document.createElement('script'); hs.type = 'text/javascript'; hs.async = true;
hs.src = ('//s10.histats.com/js15_as.js');
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(hs);
})();</script>
<noscript><a href="/" target="_blank"><img  src="//sstatic1.histats.com/0.gif?4739059&101" alt="" border="0"></a></noscript>
<!-- Histats.com  END  -->
</body>

</html>
