<!DOCTYPE html>
<html lang="id" prefix="og: https://ogp.me/ns#">

<head>
    <meta charset="UTF-8">
    <link rel="profile" href="https://gmpg.org/xfn/11">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Contoh Program Binary Search - BELAJAR</title>
    <meta name="description" content="Contoh Program Binary Search, , , , , , , 0, , , , , , 0, contoh-program-binary-search, BELAJAR" />
    <meta name="robots" content="index,follow" />
    <meta property="og:locale" content="id_ID" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Contoh Program Binary Search - BELAJAR" />
    <meta property="og:description" content="Contoh Program Binary Search, , , , , , , 0, , , , , , 0, contoh-program-binary-search, BELAJAR" />
    <meta property="og:site_name" content="BELAJAR" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Contoh Program Binary Search - BELAJAR" />
    <meta name="twitter:description" content="Contoh Program Binary Search, , , , , , , 0, , , , , , 0, contoh-program-binary-search, BELAJAR" />
    <link rel='stylesheet' id='generate-style-css' href='https://anakpramuka.github.io/css/main.min.css'?ver=3.2.4'
        media='all' />
    <link rel='stylesheet' id='ez-toc-css' href='https://anakpramuka.github.io/css/screen.min.css'?ver=2.0.40' media='all' />
    <style id='generate-style-inline-css'>
        body {
            background-color: #f7f7f7;
            color: #222222;
        }

        a {
            color: #1e73be;
        }

        a:hover,
        a:focus,
        a:active {
            color: #000000;
        }

        .wp-block-group__inner-container {
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .generate-back-to-top {
            font-size: 20px;
            border-radius: 3px;
            position: fixed;
            bottom: 30px;
            right: 30px;
            line-height: 40px;
            width: 40px;
            text-align: center;
            z-index: 10;
            transition: opacity 300ms ease-in-out;
            opacity: 0.1;
            transform: translateY(1000px);
        }

        .generate-back-to-top__show {
            opacity: 1;
            transform: translateY(0);
        }

        .navigation-search {
            position: absolute;
            left: -99999px;
            pointer-events: none;
            visibility: hidden;
            z-index: 20;
            width: 100%;
            top: 0;
            transition: opacity 100ms ease-in-out;
            opacity: 0;
        }

        .navigation-search.nav-search-active {
            left: 0;
            right: 0;
            pointer-events: auto;
            visibility: visible;
            opacity: 1;
        }

        .navigation-search input[type="search"] {
            outline: 0;
            border: 0;
            vertical-align: bottom;
            line-height: 1;
            opacity: 0.9;
            width: 100%;
            z-index: 20;
            border-radius: 0;
            -webkit-appearance: none;
            height: 60px;
        }

        .navigation-search input::-ms-clear {
            display: none;
            width: 0;
            height: 0;
        }

        .navigation-search input::-ms-reveal {
            display: none;
            width: 0;
            height: 0;
        }

        .navigation-search input::-webkit-search-decoration,
        .navigation-search input::-webkit-search-cancel-button,
        .navigation-search input::-webkit-search-results-button,
        .navigation-search input::-webkit-search-results-decoration {
            display: none;
        }

        .gen-sidebar-nav .navigation-search {
            top: auto;
            bottom: 0;
        }

        :root {
            --contrast: #222222;
            --contrast-2: #575760;
            --contrast-3: #b2b2be;
            --base: #f0f0f0;
            --base-2: #f7f8f9;
            --base-3: #ffffff;
            --accent: #1e73be;
        }

        .has-contrast-color {
            color: var(--contrast);
        }

        .has-contrast-background-color {
            background-color: var(--contrast);
        }

        .has-contrast-2-color {
            color: var(--contrast-2);
        }

        .has-contrast-2-background-color {
            background-color: var(--contrast-2);
        }

        .has-contrast-3-color {
            color: var(--contrast-3);
        }

        .has-contrast-3-background-color {
            background-color: var(--contrast-3);
        }

        .has-base-color {
            color: var(--base);
        }

        .has-base-background-color {
            background-color: var(--base);
        }

        .has-base-2-color {
            color: var(--base-2);
        }

        .has-base-2-background-color {
            background-color: var(--base-2);
        }

        .has-base-3-color {
            color: var(--base-3);
        }

        .has-base-3-background-color {
            background-color: var(--base-3);
        }

        .has-accent-color {
            color: var(--accent);
        }

        .has-accent-background-color {
            background-color: var(--accent);
        }

        body,
        button,
        input,
        select,
        textarea {
            font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
        }

        body {
            line-height: 1.5;
        }

        .entry-content>[class*="wp-block-"]:not(:last-child) {
            margin-bottom: 1.5em;
        }

        .main-navigation .main-nav ul ul li a {
            font-size: 14px;
        }

        .sidebar .widget,
        .footer-widgets .widget {
            font-size: 17px;
        }

        @media (max-width:768px) {
            h1 {
                font-size: 31px;
            }

            h2 {
                font-size: 27px;
            }

            h3 {
                font-size: 24px;
            }

            h4 {
                font-size: 22px;
            }

            h5 {
                font-size: 19px;
            }
        }

        .top-bar {
            background-color: #636363;
            color: #ffffff;
        }

        .top-bar a {
            color: #ffffff;
        }

        .top-bar a:hover {
            color: #303030;
        }

        .site-header {
            background-color: #ffffff;
        }

        .main-title a,
        .main-title a:hover {
            color: #222222;
        }

        .site-description {
            color: #757575;
        }

        .main-navigation,
        .main-navigation ul ul {
            background-color: #ed4250;
        }

        .main-navigation .main-nav ul li a,
        .main-navigation .menu-toggle,
        .main-navigation .menu-bar-items {
            color: #ffffff;
        }

        .main-navigation .main-nav ul li:not([class*="current-menu-"]):hover>a,
        .main-navigation .main-nav ul li:not([class*="current-menu-"]):focus>a,
        .main-navigation .main-nav ul li.sfHover:not([class*="current-menu-"])>a,
        .main-navigation .menu-bar-item:hover>a,
        .main-navigation .menu-bar-item.sfHover>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        button.menu-toggle:hover,
        button.menu-toggle:focus {
            color: #ffffff;
        }

        .main-navigation .main-nav ul li[class*="current-menu-"]>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        .navigation-search input[type="search"],
        .navigation-search input[type="search"]:active,
        .navigation-search input[type="search"]:focus,
        .main-navigation .main-nav ul li.search-item.active>a,
        .main-navigation .menu-bar-items .search-item.active>a {
            color: #ffffff;
            background-color: #c42f2f;
        }

        .main-navigation ul ul {
            background-color: #c42f2f;
        }

        .main-navigation .main-nav ul ul li a {
            color: #ffffff;
        }

        .main-navigation .main-nav ul ul li:not([class*="current-menu-"]):hover>a,
        .main-navigation .main-nav ul ul li:not([class*="current-menu-"]):focus>a,
        .main-navigation .main-nav ul ul li.sfHover:not([class*="current-menu-"])>a {
            color: #fcd9d6;
            background-color: #c42f2f;
        }

        .main-navigation .main-nav ul ul li[class*="current-menu-"]>a {
            color: #fcd9d6;
            background-color: #c42f2f;
        }

        .separate-containers .inside-article,
        .separate-containers .comments-area,
        .separate-containers .page-header,
        .one-container .container,
        .separate-containers .paging-navigation,
        .inside-page-header {
            background-color: #ffffff;
        }

        .entry-title a {
            color: #222222;
        }

        .entry-title a:hover {
            color: #55555e;
        }

        .entry-meta {
            color: #595959;
        }

        .sidebar .widget {
            background-color: #ffffff;
        }

        .footer-widgets {
            background-color: #ffffff;
        }

        .footer-widgets .widget-title {
            color: #000000;
        }

        .site-info {
            color: #ffffff;
            background-color: #55555e;
        }

        .site-info a {
            color: #ffffff;
        }

        .site-info a:hover {
            color: #d3d3d3;
        }

        .footer-bar .widget_nav_menu .current-menu-item a {
            color: #d3d3d3;
        }

        input[type="text"],
        input[type="email"],
        input[type="url"],
        input[type="password"],
        input[type="search"],
        input[type="tel"],
        input[type="number"],
        textarea,
        select {
            color: #666666;
            background-color: #fafafa;
            border-color: #cccccc;
        }

        input[type="text"]:focus,
        input[type="email"]:focus,
        input[type="url"]:focus,
        input[type="password"]:focus,
        input[type="search"]:focus,
        input[type="tel"]:focus,
        input[type="number"]:focus,
        textarea:focus,
        select:focus {
            color: #666666;
            background-color: #ffffff;
            border-color: #bfbfbf;
        }

        button,
        html input[type="button"],
        input[type="reset"],
        input[type="submit"],
        a.button,
        a.wp-block-button__link:not(.has-background) {
            color: #ffffff;
            background-color: #55555e;
        }

        button:hover,
        html input[type="button"]:hover,
        input[type="reset"]:hover,
        input[type="submit"]:hover,
        a.button:hover,
        button:focus,
        html input[type="button"]:focus,
        input[type="reset"]:focus,
        input[type="submit"]:focus,
        a.button:focus,
        a.wp-block-button__link:not(.has-background):active,
        a.wp-block-button__link:not(.has-background):focus,
        a.wp-block-button__link:not(.has-background):hover {
            color: #ffffff;
            background-color: #3f4047;
        }

        a.generate-back-to-top {
            background-color: rgba(0, 0, 0, 0.4);
            color: #ffffff;
        }

        a.generate-back-to-top:hover,
        a.generate-back-to-top:focus {
            background-color: rgba(0, 0, 0, 0.6);
            color: #ffffff;
        }

        @media (max-width:768px) {

            .main-navigation .menu-bar-item:hover>a,
            .main-navigation .menu-bar-item.sfHover>a {
                background: none;
                color: #ffffff;
            }
        }

        .nav-below-header .main-navigation .inside-navigation.grid-container,
        .nav-above-header .main-navigation .inside-navigation.grid-container {
            padding: 0px 20px 0px 20px;
        }

        .site-main .wp-block-group__inner-container {
            padding: 40px;
        }

        .separate-containers .paging-navigation {
            padding-top: 20px;
            padding-bottom: 20px;
        }

        .entry-content .alignwide,
        body:not(.no-sidebar) .entry-content .alignfull {
            margin-left: -40px;
            width: calc(100% + 80px);
            max-width: calc(100% + 80px);
        }

        .rtl .menu-item-has-children .dropdown-menu-toggle {
            padding-left: 20px;
        }

        .rtl .main-navigation .main-nav ul li.menu-item-has-children>a {
            padding-right: 20px;
        }

        @media (max-width:768px) {

            .separate-containers .inside-article,
            .separate-containers .comments-area,
            .separate-containers .page-header,
            .separate-containers .paging-navigation,
            .one-container .site-content,
            .inside-page-header {
                padding: 30px;
            }

            .site-main .wp-block-group__inner-container {
                padding: 30px;
            }

            .inside-top-bar {
                padding-right: 30px;
                padding-left: 30px;
            }

            .inside-header {
                padding-right: 30px;
                padding-left: 30px;
            }

            .widget-area .widget {
                padding-top: 30px;
                padding-right: 30px;
                padding-bottom: 30px;
                padding-left: 30px;
            }

            .footer-widgets-container {
                padding-top: 30px;
                padding-right: 30px;
                padding-bottom: 30px;
                padding-left: 30px;
            }

            .inside-site-info {
                padding-right: 30px;
                padding-left: 30px;
            }

            .entry-content .alignwide,
            body:not(.no-sidebar) .entry-content .alignfull {
                margin-left: -30px;
                width: calc(100% + 60px);
                max-width: calc(100% + 60px);
            }

            .one-container .site-main .paging-navigation {
                margin-bottom: 20px;
            }
        }

        /* End cached CSS */
        .is-right-sidebar {
            width: 30%;
        }

        .is-left-sidebar {
            width: 30%;
        }

        .site-content .content-area {
            width: 70%;
        }

        @media (max-width:768px) {

            .main-navigation .menu-toggle,
            .sidebar-nav-mobile:not(#sticky-placeholder) {
                display: block;
            }

            .main-navigation ul,
            .gen-sidebar-nav,
            .main-navigation:not(.slideout-navigation):not(.toggled) .main-nav>ul,
            .has-inline-mobile-toggle #site-navigation .inside-navigation>*:not(.navigation-search):not(.main-nav) {
                display: none;
            }

            .nav-align-right .inside-navigation,
            .nav-align-center .inside-navigation {
                justify-content: space-between;
            }
        }
    </style>
    <link rel="icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-32x32.png" sizes="32x32" />
    <link rel="icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-192x192.png" sizes="192x192" />
    <link rel="apple-touch-icon" href="https://anakpramuka.github.io/img/cropped-soalbelajar-180x180.png" />
    <meta name="msapplication-TileImage" content="https://anakpramuka.github.io/img/cropped-soalbelajar-270x270.png" />
</head>

<body
    class="home blog wp-custom-logo wp-embed-responsive right-sidebar nav-above-header separate-containers nav-search-enabled nav-aligned-center header-aligned-center dropdown-hover"
    itemtype="https://schema.org/Blog" itemscope>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-dark-grayscale">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 0.49803921568627" />
                    <feFuncG type="table" tableValues="0 0.49803921568627" />
                    <feFuncB type="table" tableValues="0 0.49803921568627" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-grayscale">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 1" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0 1" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-purple-yellow">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.54901960784314 0.98823529411765" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0.71764705882353 0.25490196078431" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-blue-red">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 1" />
                    <feFuncG type="table" tableValues="0 0.27843137254902" />
                    <feFuncB type="table" tableValues="0.5921568627451 0.27843137254902" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-midnight">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0 0" />
                    <feFuncG type="table" tableValues="0 0.64705882352941" />
                    <feFuncB type="table" tableValues="0 1" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-magenta-yellow">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.78039215686275 1" />
                    <feFuncG type="table" tableValues="0 0.94901960784314" />
                    <feFuncB type="table" tableValues="0.35294117647059 0.47058823529412" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-purple-green">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.65098039215686 0.40392156862745" />
                    <feFuncG type="table" tableValues="0 1" />
                    <feFuncB type="table" tableValues="0.44705882352941 0.4" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false"
        role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;">
        <defs>
            <filter id="wp-duotone-blue-orange">
                <feColorMatrix color-interpolation-filters="sRGB" type="matrix"
                    values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " />
                <feComponentTransfer color-interpolation-filters="sRGB">
                    <feFuncR type="table" tableValues="0.098039215686275 1" />
                    <feFuncG type="table" tableValues="0 0.66274509803922" />
                    <feFuncB type="table" tableValues="0.84705882352941 0.41960784313725" />
                    <feFuncA type="table" tableValues="1 1" />
                </feComponentTransfer>
                <feComposite in2="SourceGraphic" operator="in" />
            </filter>
        </defs>
    </svg><a class="screen-reader-text skip-link" href="#content" title="Langsung ke isi">Langsung ke isi</a>
    <nav class="main-navigation nav-align-center has-menu-bar-items sub-menu-right" id="site-navigation"
        aria-label="Utama" itemtype="https://schema.org/SiteNavigationElement" itemscope>
        <div class="inside-navigation grid-container">
            <form method="get" class="search-form navigation-search" action="/">
                <input type="search" class="search-field" value="" name="q" title="Cari" />
            </form> <button class="menu-toggle" aria-controls="primary-menu" aria-expanded="false">
                <span class="gp-icon icon-menu-bars"><svg viewBox="0 0 512 512" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                        <path
                            d="M0 96c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24zm0 160c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24zm0 160c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24s-10.745 24-24 24H24c-13.255 0-24-10.745-24-24z" />
                    </svg><svg viewBox="0 0 512 512" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                        width="1em" height="1em">
                        <path
                            d="M71.029 71.029c9.373-9.372 24.569-9.372 33.942 0L256 222.059l151.029-151.03c9.373-9.372 24.569-9.372 33.942 0 9.372 9.373 9.372 24.569 0 33.942L289.941 256l151.03 151.029c9.372 9.373 9.372 24.569 0 33.942-9.373 9.372-24.569 9.372-33.942 0L256 289.941l-151.029 151.03c-9.373 9.372-24.569 9.372-33.942 0-9.372-9.373-9.372-24.569 0-33.942L222.059 256 71.029 104.971c-9.372-9.373-9.372-24.569 0-33.942z" />
                    </svg></span><span class="mobile-menu">Menu</span> </button>
            <div id="primary-menu" class="main-nav">
                <ul id="menu-soal-belajar" class=" menu sf-menu">
                    <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1"><a
                            href="https://anakpramuka.github.io">Home</a></li>
                </ul>
                </ul>
            </div>
            <div class="menu-bar-items"><span class="menu-bar-item search-item"><a aria-label="Buka Kolom Pencarian"
                        href="#"><span class="gp-icon icon-search"><svg viewBox="0 0 512 512"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                                <path fill-rule="evenodd" clip-rule="evenodd"
                                    d="M208 48c-88.366 0-160 71.634-160 160s71.634 160 160 160 160-71.634 160-160S296.366 48 208 48zM0 208C0 93.125 93.125 0 208 0s208 93.125 208 208c0 48.741-16.765 93.566-44.843 129.024l133.826 134.018c9.366 9.379 9.355 24.575-.025 33.941-9.379 9.366-24.575 9.355-33.941-.025L337.238 370.987C301.747 399.167 256.839 416 208 416 93.125 416 0 322.875 0 208z" />
                            </svg><svg viewBox="0 0 512 512" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                width="1em" height="1em">
                                <path
                                    d="M71.029 71.029c9.373-9.372 24.569-9.372 33.942 0L256 222.059l151.029-151.03c9.373-9.372 24.569-9.372 33.942 0 9.372 9.373 9.372 24.569 0 33.942L289.941 256l151.03 151.029c9.372 9.373 9.372 24.569 0 33.942-9.373 9.372-24.569 9.372-33.942 0L256 289.941l-151.029 151.03c-9.373 9.372-24.569 9.372-33.942 0-9.372-9.373-9.372-24.569 0-33.942L222.059 256 71.029 104.971c-9.372-9.373-9.372-24.569 0-33.942z" />
                            </svg></span></a></span></div>
        </div>
    </nav>
    <header class="site-header grid-container" id="masthead" aria-label="Situs"
        itemtype="https://schema.org/WPHeader" itemscope>
        <div class="inside-header grid-container">
            <h1 class="site-logo">
                <a href="https://anakpramuka.github.io" rel="home"> BELAJAR</a>
            </h1>
        </div>
    </header>

    <div class="site grid-container container hfeed" id="page">
        <div class="site-content" id="content">
            <div class="content-area" id="primary">
                    <main class="site-main" id="main">
        <article id="post-1327" class="post-1327 post type-post status-publish format-standard hentry category-info"
            itemtype="https://schema.org/CreativeWork" itemscope="">
            <div class="inside-article">
                <header class="entry-header" aria-label="Konten">
                    <h1 class="entry-title" itemprop="headline">Contoh Program Binary Search</h1>
                    <div class="entry-meta">
                       <span
                            class="byline">oleh <span class="author vcard" itemprop="author"
                                itemtype="https://schema.org/Person" itemscope=""><span class="author-name"
                                    itemprop="name">RYOPURBA</span></span></span>
                    </div>
                </header>
                <div class="entry-content" itemprop="text">
                    <div style="text-align: center">
                        <img src="https://tse1.mm.bing.net/th?q=Contoh+Program+Binary+Search" alt="Contoh Program Binary Search">
                    </div>
                    <p></p>
                    <p>cooding program binary search pada visual basic studio</p>
                    <div id="ez-toc-container"
                        class="ez-toc-v2_0_40 counter-hierarchy ez-toc-counter ez-toc-light-blue ez-toc-container-direction">
                        <div class="ez-toc-title-container">
                            <p class="ez-toc-title">Daftar Isi</p>
                            <span class="ez-toc-title-toggle"><a href="#"
                                    class="ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle"
                                    area-label="ez-toc-toggle-icon-1"><label for="item-63b392361c4a0"
                                        aria-label="Table of Content"><span
                                            style="display: flex;align-items: center;width: 35px;height: 30px;justify-content: center;direction:ltr;"><svg
                                                style="fill: #999;color:#999" xmlns="http://www.w3.org/2000/svg"
                                                class="list-377408" width="20px" height="20px" viewBox="0 0 24 24"
                                                fill="none">
                                                <path
                                                    d="M6 6H4v2h2V6zm14 0H8v2h12V6zM4 11h2v2H4v-2zm16 0H8v2h12v-2zM4 16h2v2H4v-2zm16 0H8v2h12v-2z"
                                                    fill="currentColor"></path>
                                            </svg><svg style="fill: #999;color:#999" class="arrow-unsorted-368013"
                                                xmlns="http://www.w3.org/2000/svg" width="10px" height="10px"
                                                viewBox="0 0 24 24" version="1.2" baseProfile="tiny">
                                                <path
                                                    d="M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z">
                                                </path>
                                            </svg></span></label><input type="checkbox" id="item-63b392361c4a0"></a></span>
                        </div>
                        <nav>
                            <ul class="ez-toc-list ez-toc-list-level-1 ">
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#cooding-program-binary-search-pada-visual-basic-studio">1.
                                            cooding program binary search pada visual basic studio</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-program-c-dengan-mengunakan-sequential-search-dan-binary-search-secara-descending-trima-kasih%e2%80%8b">2.
                                            Buatlah program C++ dengan mengunakan Sequential search dan binary search secara descending. Trima kasih^^​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#apa-itu-binary-search">3.
                                            apa itu binary search</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#bila-dianalogikan-binary-search-mirip-dengan">4.
                                            Bila dianalogikan binary search mirip dengan</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">5.
                                            Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. </a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buat-lah-algoritma-binary-search%e2%80%8b">6.
                                            buat lah algoritma BINARY SEARCH​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#mohon-batuan-yg-cara-membuat-programflowchart-untuk-sortinh-dan-searching-dengan-menggunakan-metode-binary-search">7.
                                            Mohon batuan yg cara membuat program+flowchart untuk sortinh dan searching dengan menggunakan metode binary search</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-program-c-sederhana-sequential-search-dan-binary-search-secara-descending-mohon-bantuannyaprogramnya-disatukan-ya-sequential-dengan-binary-terus-secara-descending-bukan-ascending-yah-des">8.
                                            Buatlah program c++ sederhana sequential search dan binary search secara descending. Mohon bantuannyaProgramnya disatukan ya sequential dengan binary terus secara descending bukan ascending yah... Descending itu pengurutan data terbesar ke terkecil. Mohon bantuannya... Terimakasih. ​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">9.
                                            Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. ​​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#jelaskan-binary-search-terhadap-data-berikut-qwerty%e2%80%8b">10.
                                            jelaskan binary search terhadap data berikut qwerty?​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#algoritma-lengkap%c2%a0-binary-search-secara-discanding%c2%a0">11.
                                            algoritma lengkap  binary search secara discanding
 </a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#1-apa-yg-dimaksud-dgn-binary-search2-bagaimana-penerapan-materi-binary-search%e2%80%8b">12.
                                            1. Apa yg dimaksud dgn Binary Search2. Bagaimana penerapan materi Binary Search​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">13.
                                            Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. ​</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#tolong-di-jelaskan-apa-arti-dari-binary-search-tree-sequantial-search-serta-cara-kerja-nya-thanks">14.
                                            Tolong di jelaskan apa arti dari :
- Binary Search Tree 
- Sequantial Search 
serta cara kerja nya.
Thank's</a>
                                    </li>
                                                                    <li class="ez-toc-page-1 ez-toc-heading-level-2">
                                        <a class="ez-toc-link ez-toc-heading-1"
                                            href="#diantara-binary-search-dan-sequintial-manakah-yang-lebih-efisien-dan-berikan-alasannya%e2%80%8b">15.
                                            diantara binary search dan sequintial manakah yang lebih efisien dan berikan alasannya​</a>
                                    </li>
                                                            </ul>
                        </nav>
                    </div>
                                            <h2 class="ez-toc-section" id="cooding-program-binary-search-pada-visual-basic-studio">
                            1. cooding program binary search pada visual basic studio</h2><br />
                        Function arrayFind(theArray() As Integer, target As Integer) As Boolean<br />    Dim low As Integer<br />    low = 0<br />    Dim high As Integer<br />    high = UBound(theArray)<br />    Dim i As Integer<br />    Dim result As Boolean<br /><br />    Do While low &lt;= high<br />        i = (low + high) / 2<br />        If target = theArray(i) Then<br />            arrayFind = True<br />            Exit Do<br />        ElseIf target &lt; theArray(i) Then<br />            high = (i - 1)<br />        Else<br />            low = (i + 1)<br />        End If<br />    Loop<br /><br />    If Not arrayFind Then<br />        arrayFind = False<br />    End If<br />End Function<br /><br />semoga membantu<br />
                                            <h2 class="ez-toc-section" id="buatlah-program-c-dengan-mengunakan-sequential-search-dan-binary-search-secara-descending-trima-kasih%e2%80%8b">
                            2. Buatlah program C++ dengan mengunakan Sequential search dan binary search secara descending. Trima kasih^^​</h2><br />
                        <p><strong>Jawaban:</strong></p><p>Berikut jawabannya dalam bahasa C++:</p><p>#define _CRT_SECURE_NO_WARNINGS
</p><p>#include&lt;stdio.h&gt;
</p><p>#include&lt;stdlib.h&gt;
</p><p>#include&lt;time.h&gt;
</p><p>struct Data
</p><p>{
</p><p>	int value;
</p><p>}dataCollection[1001];
</p><p>
</p><p>int counterData = 0;
</p><p>
</p><p>void spacing()
</p><p>{
</p><p>	for(int i=0; i&lt;25; i++)
</p><p>	{
</p><p>  printf("\n");
</p><p>	}
</p><p>}
</p><p>
</p><p>void sortDataInDescendingOrder()
</p><p>{
</p><p>	int max,temp;
</p><p>	for(int i=0; i&lt;counterData-1; i++)
</p><p>	{
</p><p>  max = i;
</p><p>  for(int j=i+1; j&lt;counterData; j++)
</p><p>  {
</p><p>  	if(dataCollection[max].value&lt;dataCollection[j].value)
</p><p>  	{
</p><p>    max = j;
</p><p>  	}
</p><p>  }
</p><p>  temp = dataCollection[max].value;
</p><p>  dataCollection[max].value = dataCollection[i].value;
</p><p>  dataCollection[i].value = temp;
</p><p>	}
</p><p>}
</p><p>void viewAllData()
</p><p>{
</p><p>	system("cls");
</p><p>	spacing();
</p><p>	for(int i=0; i&lt;counterData; i++)
</p><p>	{
</p><p>  printf("Data %-4d: %-4d\n",i+1,dataCollection[i].value);
</p><p>	}
</p><p>	printf("\n\nPress Enter to Continue");
</p><p>	getchar();
</p><p>}
</p><p>void searchAnEntryUsingLinearSearch(int searchEntry)
</p><p>{
</p><p>  </p><p>	for(int i=0; i&lt;counterData; i++)
</p><p>	{
</p><p>  if(dataCollection[i].value == searchEntry)
</p><p>  {
</p><p>  	printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,i);
</p><p>  	getchar();
</p><p>  	return;
</p><p>  }
</p><p>	}
</p><p>	printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>	getchar();
</p><p>}
</p><p>int searchAnEntryUsingBinarySearch(int searchEntry, int low, int high)
</p><p>{
</p><p>	if(high &gt;= low)
</p><p>	{
</p><p>  int mid = low + (high-low) /2;
</p><p>  if(dataCollection[mid].value == searchEntry)
</p><p>  	return mid;
</p><p>  if(dataCollection[mid].value &gt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,mid+1,high);    </p><p>  if(dataCollection[mid].value &lt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,low,mid-1);
</p><p>	}
</p><p>	return -1;
</p><p>}
</p><p>void insertNData()
</p><p>{
</p><p>	int temp;
</p><p>	for(int i=0; i&lt;counterData; i++)
</p><p>	{
</p><p>  printf("Insert Value of Data - %d: ",i+1);
</p><p>  scanf("%d",&amp;temp);
</p><p>  rewind(stdin);
</p><p>  dataCollection[i].value = temp;
</p><p>	}
</p><p>}
</p><p>int main()
</p><p>{
</p><p>  </p><p>	int menu;
</p><p>	int searchEntry, result;
</p><p>	do
</p><p>	{
</p><p>  system("cls");
</p><p>  spacing();
</p><p>  printf("Insert Amount of Data: ");
</p><p>  scanf("%d",&amp;counterData);
</p><p>  rewind(stdin);
</p><p>	}while(counterData&lt;=0);
</p><p>	//Insert N Amount of Data
</p><p>	insertNData();
</p><p>	//Sort Data Descending
</p><p>	sortDataInDescendingOrder();
</p><p>	do
</p><p>	{
</p><p>  system("cls");
</p><p>  spacing();
</p><p>  printf("1. View All Data\n2. Search An Entry Using Binary Search\n3. Search An Entry Using Linear Search\n0. Exit\nChoose: ");
</p><p>  scanf("%d",&amp;menu);
</p><p>  rewind(stdin);
</p><p>  switch(menu)
</p><p>  {
</p><p>  case 1:
</p><p>  	viewAllData();
</p><p>    break;
</p><p>  case 2:
</p><p>    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	result = searchAnEntryUsingBinarySearch(searchEntry,0,counterData);
</p><p>  	if(result==-1)
</p><p>    printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>  	else
</p><p>    printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,result);
</p><p>  	getchar();
</p><p>  	break;
</p><p>  case 3:    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	searchAnEntryUsingLinearSearch(searchEntry);
</p><p>  	break;
</p><p>  }
</p><p>	}while(menu!=0);
</p><p>	return 0;
</p><p>}</p><p><strong>Penjelasan:</strong></p><p>Pertama program akan meminta user untuk memasukkan nilai sebesar n untuk menentukan data yang ada dalam collection atau array. Kemudian program akan meminta user memasukkan nilai setiap data sebanyak n kali. Lalu user akan dibawa ke dalam menu yang dapat dinavigasikan ke lihat semua data, pencarian secara binary dan pencarian secara sequential.</p><br />
                                            <h2 class="ez-toc-section" id="apa-itu-binary-search">
                            3. apa itu binary search</h2><br />
                        Binary search adalah metode pencarian suatu data atau elemen di dalam suatu array dengan kondisi data dalam keadaan terurut.<p>Binary Search adalah metode pencarian suatu data atau elemen di dalam suatu array dengan kondisi data dalam keadaan terurut.</p><br />
                                            <h2 class="ez-toc-section" id="bila-dianalogikan-binary-search-mirip-dengan">
                            4. Bila dianalogikan binary search mirip dengan</h2><br />
                        <p><strong>Jawaban:</strong></p><p>Binary Search merupakan sebuah teknik pencarian data dengancara berulang kali membagi separuh dari jumlah data yang dicari sampai sehingga memperkecil lokasi pencarian menjadi satu data. Dengan teknik ini kita akanmembuang setengah dari jumlah data. Apabila ditemukan kecocokan data maka program akan mengembalikan output, jika tidak pencarian akan terus berlanjut hingga akhir dari pembagian jumlah data tersebut. Algotihma ini biasanya banyak digunakan untuk mencari di program dengan jumlah data yang banyak, dimana kompleksitas dari algorithma ini adalah Ο(log n) di mana n adalah jumlah item. Pada saat menggunakan binary search, data yang berada di dalam array harus diurutkan terlebih dahulu.</p><p></p><p>Misalkan kita memiliki int arr[] = {70, 60, 30, 50, 40,20}, data para int arr harus diurutkan terlebih dahulu menggunakan teknik sorting seperti bubble sort. Sehingga array kita akan menjadi int arr[] = {20,30,40,50,60,70}. Apabila angka yang dicari adalah angka 40, berikut gambaran dari implementasi BinarySearch:</p><p></p><p>1st Cycle:</p><p>(20,30,40,50,60,70)</p><p>LOW = 0</p><p>HIGH = N</p><p>MID = (LOW + HIGH)/2 = (0+6)/2 = 3</p><p>(arr[MID] == 40)</p><p>(20,30,40,50,60,70)</p><p>(50==40) // FALSE</p><p>HIGH = MID-1</p><p></p><p>*Array di mulai dari index ke 0, maka index ke 3 berisi nilai 50. </p><p></p><p>2nd Cycle:</p><p>(20,30,40,50,60,70)</p><p>MID = (LOW + HIGH)/2 = (0+2)/2 = 1</p><p>(arr[MID] == 40)</p><p>(20,30,40,50,60,70)</p><p>(30==40) // FALSE</p><p>LOW = MID+1</p><p></p><p>3rd Cycle:</p><p>(20,30,40,50,60,70)</p><p>MID = (LOW + HIGH)/2 = (2+2)/2=2</p><p>(arr[MID] == 40)</p><p>(20,30,40,50,60,70)</p><p>(40==40) // TRUE</p><p></p><p>Jika data ditemukan, maka program akan keluar dari looping. Jika kita ingin menampilkan index dari data yang dicari, kita tinggal menyimpan index dari array tersebut dan menampilkan nya.</p><p></p><p>Berikut implementasi dari Binary Search menggunakan Bahasa C:</p><p></p><p></p><br />
                                            <h2 class="ez-toc-section" id="buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">
                            5. Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. </h2><br />
                        <p><strong>Jawaban:</strong></p><p>Berikut jawabannya dalam bahasa C++:</p><p>#define _CRT_SECURE_NO_WARNINGS
</p><p>#include&lt;stdio.h&gt;
</p><p>#include&lt;stdlib.h&gt;
</p><p>#include&lt;time.h&gt;
</p><p>struct Data
</p><p>{
</p><p>	int value;
</p><p>}dataCollection[1001];
</p><p>
</p><p>void spacing()
</p><p>{
</p><p>	for(int i=0; i&lt;25; i++)
</p><p>	{
</p><p>  printf("\n");
</p><p>	}
</p><p>}
</p><p>void insertRandomData()
</p><p>{
</p><p>	srand(time(NULL)); //Random Seeding
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  //Insert Data Random Value from 1 to 1000
</p><p>  dataCollection[i].value = rand()%1000 + 1;
</p><p>	}
</p><p>
</p><p>}
</p><p>void sortDataInDescendingOrder()
</p><p>{
</p><p>	int max,temp;
</p><p>	for(int i=0; i&lt;999; i++)
</p><p>	{
</p><p>  max = i;
</p><p>  for(int j=i+1; j&lt;1000; j++)
</p><p>  {
</p><p>  	if(dataCollection[max].value&lt;dataCollection[j].value)
</p><p>  	{
</p><p>    max = j;
</p><p>  	}
</p><p>  }
</p><p>  temp = dataCollection[max].value;
</p><p>  dataCollection[max].value = dataCollection[i].value;
</p><p>  dataCollection[i].value = temp;
</p><p>	}
</p><p>}
</p><p>void viewAllData()
</p><p>{
</p><p>	system("cls");
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  printf("Data %-4d: %-4d\n",i+1,dataCollection[i].value);
</p><p>	}
</p><p>	printf("\n\nPress Enter to Continue");
</p><p>	getchar();
</p><p>}
</p><p>void searchAnEntryUsingLinearSearch(int searchEntry)
</p><p>{
</p><p>  </p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  if(dataCollection[i].value == searchEntry)
</p><p>  {
</p><p>  	printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,i);
</p><p>  	getchar();
</p><p>  	return;
</p><p>  }
</p><p>	}
</p><p>	printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>	getchar();
</p><p>}
</p><p>int searchAnEntryUsingBinarySearch(int searchEntry, int low, int high)
</p><p>{
</p><p>	if(high &gt;= low)
</p><p>	{
</p><p>  int mid = low + (high-low) /2;
</p><p>  if(dataCollection[mid].value == searchEntry)
</p><p>  	return mid;
</p><p>  if(dataCollection[mid].value &gt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,mid+1,high);    </p><p>  if(dataCollection[mid].value &lt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,low,mid-1);
</p><p>	}
</p><p>	return -1;
</p><p>}
</p><p>int main()
</p><p>{
</p><p>  </p><p>	int menu;
</p><p>	int searchEntry, result;
</p><p>	//Insert 1000 Random Entry
</p><p>	insertRandomData();
</p><p>	//Sort Data Descending
</p><p>	sortDataInDescendingOrder();
</p><p>	do
</p><p>	{
</p><p>  system("cls");
</p><p>  spacing();
</p><p>  printf("1. View All Data\n2. Search An Entry Using Binary Search\n3. Search An Entry Using Linear Search\n0. Exit\nChoose: ");
</p><p>  scanf("%d",&amp;menu);
</p><p>  rewind(stdin);
</p><p>  switch(menu)
</p><p>  {
</p><p>  case 1:
</p><p>  	viewAllData();
</p><p>    break;
</p><p>  case 2:
</p><p>    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	result = searchAnEntryUsingBinarySearch(searchEntry,0,1000);
</p><p>  	if(result==-1)
</p><p>    printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>  	else
</p><p>    printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,result);
</p><p>  	getchar();
</p><p>  	break;
</p><p>  case 3:    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	searchAnEntryUsingLinearSearch(searchEntry);
</p><p>  	break;
</p><p>  }
</p><p>	}while(menu!=0);
</p><p>	return 0;
</p><p>}</p><p><strong>Penjelasan:</strong></p><p>Program ini berjalan pertama kali akan menginisialisasi struct data dengan variable array bernama <strong>dataCollection</strong> yang dapat menampung 1000 entri data yang berupa integer atau bilangan bulat. Kemudian <strong>dataCollection </strong> akan diisi dengan 1000 entri data bilangan bulat yang dipilih acak dari angka 1 hingga 1000. Setelah diisi, array dataCollection akan diurutkan descending dengan menggunakan algoritma <strong>selection sort</strong>. Lalu user dapat memilih menu 1 untuk melihat seluruh data, menu 2 untuk mencari data dengan menggunakan metode binary search, dan menu 3 untuk mencari data dengan menggunakan metode linear search. Terakhir jika user ingin keluar maka akan mengisi menu 0 untuk keluar.</p><br />
                                            <h2 class="ez-toc-section" id="buat-lah-algoritma-binary-search%e2%80%8b">
                            6. buat lah algoritma BINARY SEARCH​</h2><br />
                        <p><strong>Jawaban:</strong></p><p><strong>Java Programming </strong></p><p>class BinarySearch {
</p><p>    // Returns index of x if it is present in arr[l..
</p><p>    // r], else return -1
</p><p>    int binarySearch(int arr[], int l, int r, int x)
</p><p>    {
</p><p>        if (r &gt;= l) {
</p><p>            int mid = l + (r - l) / 2;
</p><p>  
</p><p>            // If the element is present at the
</p><p>            // middle itself
</p><p>            if (arr[mid] == x)
</p><p>                return mid;
</p><p>  
</p><p>            // If element is smaller than mid, then
</p><p>            // it can only be present in left subarray
</p><p>            if (arr[mid] &gt; x)
</p><p>                return binarySearch(arr, l, mid - 1, x);
</p><p>  
</p><p>            // Else the element can only be present
</p><p>            // in right subarray
</p><p>            return binarySearch(arr, mid + 1, r, x);
</p><p>        }
</p><p>  
</p><p>        // We reach here when element is not present
</p><p>        // in array
</p><p>        return -1;
</p><p>    }
</p><p>  
</p><p>    // Driver method to test above
</p><p>    public static void main(String args[])
</p><p>    {
</p><p>        BinarySearch ob = new BinarySearch();
</p><p>        int arr[] = { 2, 3, 4, 10, 40 };
</p><p>        int n = arr.length;
</p><p>        int x = 10;
</p><p>        int result = ob.binarySearch(arr, 0, n - 1, x);
</p><p>        if (result == -1)
</p><p>            System.out.println("Element not present");
</p><p>        else
</p><p>            System.out.println("Element found at index " + result);
</p><p>    }
</p><p>}</p><p><strong>Penjelasan:</strong></p><p>Jika menggunakan bahasa lain struktur algoritmanya sama tinggal penulisannya sintaksnya yg disesuaikan dengan bahasa yg digunakan</p><p>catatan lain: </p><p>variable x pada main bisa diganti 33 untuk mencari data 33 berada di index berapa.</p><br />
                                            <h2 class="ez-toc-section" id="mohon-batuan-yg-cara-membuat-programflowchart-untuk-sortinh-dan-searching-dengan-menggunakan-metode-binary-search">
                            7. Mohon batuan yg cara membuat program+flowchart untuk sortinh dan searching dengan menggunakan metode binary search</h2><br />
                        Selamat sore semua . Lama juga ya Bintara vakum dari dunia Bloging , karena sibuk sama tugas kuliah, OK . sekarang Bintara akan membagikan script lagi nih, bagaimana cara membuat metode pencarian nilai pada index array menggunakan metode Binary Search. lihat juga yang Sequential Search sama Interpolation Search ya . :) . ok langsung cekidot .<br /><br />￼<br /><br /><br /><br />Script Program<br />#include &lt;stdio.h&gt;<br /><br />int main(){<br />    int array_a[10] = {0,2,5,7,11,12,14,22,26,31};<br />    int awal=0, tengah, akhir=9, cari, flag = 0;<br />    printf("data yang anda cari : ");<br />    scanf("%i", &amp;cari);<br />    while(awal &lt;= akhir &amp;&amp; flag == 0){<br />        tengah = (awal + akhir)/2;<br />        if(array_a[tengah]==cari){<br />            flag = 1;<br />            break;<br />        }<br />        else if(array_a[tengah] &lt; cari){<br />            awal = tengah + 1;<br />            printf("cari kanan\n");<br />        }<br />        else {<br />            akhir = tengah - 1;<br />            printf("cari kiri\n");<br />        }<br />    }<br />    if(flag == 1) printf("data ditemukan");<br />    else printf("data tidak ditemukan");<br />}<br /><br /><br />Untuk hasilnya, seperti biasa aja, langsung compile aja sendiri , ok , biar sama sama belajar.<br /><br /><br />
                                            <h2 class="ez-toc-section" id="buatlah-program-c-sederhana-sequential-search-dan-binary-search-secara-descending-mohon-bantuannyaprogramnya-disatukan-ya-sequential-dengan-binary-terus-secara-descending-bukan-ascending-yah-des">
                            8. Buatlah program c++ sederhana sequential search dan binary search secara descending. Mohon bantuannyaProgramnya disatukan ya sequential dengan binary terus secara descending bukan ascending yah... Descending itu pengurutan data terbesar ke terkecil. Mohon bantuannya... Terimakasih. ​</h2><br />
                        <p><strong>Jawaban:</strong></p><p>Berikut jawabannya dalam bahasa C++:</p><p>#define _CRT_SECURE_NO_WARNINGS
</p><p>#include&lt;stdio.h&gt;
</p><p>#include&lt;stdlib.h&gt;
</p><p>#include&lt;time.h&gt;
</p><p>struct Data
</p><p>{
</p><p>	int value;
</p><p>}dataCollection[1001];
</p><p>
</p><p>void spacing()
</p><p>{
</p><p>	for(int i=0; i&lt;25; i++)
</p><p>	{
</p><p>  printf("\n");
</p><p>	}
</p><p>}
</p><p>void insertRandomData()
</p><p>{
</p><p>	srand(time(NULL)); //Random Seeding
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  //Insert Data Random Value from 1 to 1000
</p><p>  dataCollection[i].value = rand()%1000 + 1;
</p><p>	}
</p><p>
</p><p>}
</p><p>void sortDataInDescendingOrder()
</p><p>{
</p><p>	int max,temp;
</p><p>	for(int i=0; i&lt;999; i++)
</p><p>	{
</p><p>  max = i;
</p><p>  for(int j=i+1; j&lt;1000; j++)
</p><p>  {
</p><p>  	if(dataCollection[max].value&lt;dataCollection[j].value)
</p><p>  	{
</p><p>    max = j;
</p><p>  	}
</p><p>  }
</p><p>  temp = dataCollection[max].value;
</p><p>  dataCollection[max].value = dataCollection[i].value;
</p><p>  dataCollection[i].value = temp;
</p><p>	}
</p><p>}
</p><p>void viewAllData()
</p><p>{
</p><p>	system("cls");
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  printf("Data %-4d: %-4d\n",i+1,dataCollection[i].value);
</p><p>	}
</p><p>	printf("\n\nPress Enter to Continue");
</p><p>	getchar();
</p><p>}
</p><p>void searchAnEntryUsingLinearSearch(int searchEntry)
</p><p>{
</p><p>  </p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  if(dataCollection[i].value == searchEntry)
</p><p>  {
</p><p>  	printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,i);
</p><p>  	getchar();
</p><p>  	return;
</p><p>  }
</p><p>	}
</p><p>	printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>	getchar();
</p><p>}
</p><p>int searchAnEntryUsingBinarySearch(int searchEntry, int low, int high)
</p><p>{
</p><p>	if(high &gt;= low)
</p><p>	{
</p><p>  int mid = low + (high-low) /2;
</p><p>  if(dataCollection[mid].value == searchEntry)
</p><p>  	return mid;
</p><p>  if(dataCollection[mid].value &gt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,mid+1,high);    </p><p>  if(dataCollection[mid].value &lt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,low,mid-1);
</p><p>	}
</p><p>	return -1;
</p><p>}
</p><p>int main()
</p><p>{
</p><p>  </p><p>	int menu;
</p><p>	int searchEntry, result;
</p><p>	//Insert 1000 Random Entry
</p><p>	insertRandomData();
</p><p>	//Sort Data Descending
</p><p>	sortDataInDescendingOrder();
</p><p>	do
</p><p>	{
</p><p>  system("cls");
</p><p>  spacing();
</p><p>  printf("1. View All Data\n2. Search An Entry Using Binary Search\n3. Search An Entry Using Linear Search\n0. Exit\nChoose: ");
</p><p>  scanf("%d",&amp;menu);
</p><p>  rewind(stdin);
</p><p>  switch(menu)
</p><p>  {
</p><p>  case 1:
</p><p>  	viewAllData();
</p><p>    break;
</p><p>  case 2:
</p><p>    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	result = searchAnEntryUsingBinarySearch(searchEntry,0,1000);
</p><p>  	if(result==-1)
</p><p>    printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>  	else
</p><p>    printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,result);
</p><p>  	getchar();
</p><p>  	break;
</p><p>  case 3:    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	searchAnEntryUsingLinearSearch(searchEntry);
</p><p>  	break;
</p><p>  }
</p><p>	}while(menu!=0);
</p><p>	return 0;
</p><p>}</p><p>Link Backup: https://pastebin.com/RiMZVVNr</p><p></p><p><strong>Penjelasan:</strong></p><p>Program ini berjalan pertama kali akan menginisialisasi struct data dengan variable array bernama <strong>dataCollection</strong> yang dapat menampung 1000 entri data yang berupa integer atau bilangan bulat. Kemudian <strong>dataCollection </strong> akan diisi dengan 1000 entri data bilangan bulat yang dipilih acak dari angka 1 hingga 1000. Setelah diisi, array dataCollection akan diurutkan descending dengan menggunakan algoritma <strong>selection sort</strong>. Lalu user dapat memilih menu 1 untuk melihat seluruh data, menu 2 untuk mencari data dengan menggunakan metode binary search, dan menu 3 untuk mencari data dengan menggunakan metode linear search. Terakhir jika user ingin keluar maka akan mengisi menu 0 untuk keluar.</p><br />
                                            <h2 class="ez-toc-section" id="buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">
                            9. Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. ​​</h2><br />
                        <p>#include &lt;iostream&gt;</p><p>#include &lt;conio.h&gt;</p><p></p><p>int data[10],data2[10];</p><p>int n;</p><p>void tukar(int a,int b)</p><p>{</p><p>int t;</p><p>t = data[b];</p><p>data[b] = data[a];</p><p>data[a] = t;</p><p>}</p><p>void Input()</p><p>{</p><p>cout&lt;&lt;“Masukkan jumlah data = “;cin&gt;&gt;n;</p><p>cout&lt;&lt;“————————————–“&lt;&lt;endl;</p><p>for(int i=0;i&lt;n;i++)</p><p>{</p><p>cout&lt;&lt;“Masukkan data ke-“&lt;&lt;(i+1)&lt;&lt;” = “;cin&gt;&gt;data[i];</p><p>data2[i] = data[i];</p><p>}</p><p>cout&lt;&lt;endl;</p><p>}</p><p>void Tampil()</p><p>{</p><p>for(int i=0;i&lt;n;i++)</p><p>{</p><p>cout&lt;&lt;data[i]&lt;&lt;” “;</p><p>}</p><p>cout&lt;&lt;endl;</p><p>}void bubble_sort()</p><p>{</p><p>for(int i=1;i&lt;n;i++)</p><p>{</p><p>for(int j=n-1;j&gt;=i;j–)</p><p>{</p><p>if(data[j]&lt;data[j-1]) tukar(j,j-1);</p><p>}</p><p>Tampil();</p><p>}</p><p>cout&lt;&lt;endl;</p><p>}</p><p>main()</p><p>{</p><p>cout&lt;&lt;“*————————————-*”&lt;&lt;endl;</p><p>cout&lt;&lt;“* Selamat datang di aplikasi *”&lt;&lt;endl;</p><p>cout&lt;&lt;“* Bubble Sort *”&lt;&lt;endl;</p><p>cout&lt;&lt;“*————————————-*”&lt;&lt;endl;</p><p>Input();</p><p>cout&lt;&lt;“Proses Bubble Sort,,,,,,,”&lt;&lt;endl;</p><p>cout&lt;&lt;“————————————-“&lt;&lt;endl;</p><p>Tampil();</p><p>bubble_sort();</p><p>cout&lt;&lt;“————————————-“&lt;&lt;endl;</p><p>cout&lt;&lt;” TERIMA KASIH “&lt;&lt;endl;</p><p>cout&lt;&lt;“————————————-“&lt;&lt;endl;</p><p></p><p>getch();}</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p>kyk ny salah<br />
                                            <h2 class="ez-toc-section" id="jelaskan-binary-search-terhadap-data-berikut-qwerty%e2%80%8b">
                            10. jelaskan binary search terhadap data berikut qwerty?​</h2><br />
                        <p>Penjelasan tentang <strong>binary search </strong>terhadap data adalah sebuah teknik pencarian berdasarkan index ke berapa data yang dicari. Binary search melakukan scanning berdasarkan urutan data.</p><p><strong>Pembahasan</strong></p><p><strong>Pencarian biner</strong> adalah algoritma pencarian untuk data yang diurutkan. Pencarian dilakukan dengan cara menebak apakah data yang Anda cari berada di tengah data dan membandingkan data yang Anda cari dengan data yang ada di tengah. Jika data di tengah sama dengan data yang Anda cari, berarti Anda telah menemukan datanya.Salah satu syarat untuk melakukan pencarian biner  adalah datanya benar.Teknik pengambilan data yang secara iteratif membelah dua dari kumpulan data yang menarik sampai hanya ada satu datum untuk dicari. Dengan menggunakan teknik ini, Anda membuang setengah  jumlah data.</p><p></p>Pelajari lebih lanjut<p>Pelajari lebih lanjut materi tentang pencarian biner: https://brainly.co.id/tugas/22970850</p><p></p><p><strong>#BelajarBersamaBrainly #SPJ1</strong></p><br />
                                            <h2 class="ez-toc-section" id="algoritma-lengkap%c2%a0-binary-search-secara-discanding%c2%a0">
                            11. algoritma lengkap  binary search secara discanding
 </h2><br />
                        metode pencarian binary search.pengurutan secara descnding<br />cara mengurutkan dari besar ke kecill<br /><br />
                                            <h2 class="ez-toc-section" id="1-apa-yg-dimaksud-dgn-binary-search2-bagaimana-penerapan-materi-binary-search%e2%80%8b">
                            12. 1. Apa yg dimaksud dgn Binary Search2. Bagaimana penerapan materi Binary Search​</h2><br />
                        <p>1. Apa yg dimaksud dgn Binary Search....</p><p>Jawaban:</p><p>•Binary search adalah algoritma pencarian untuk data yang terurut.</p><p></p><p>2. Bagaimana penerapan materi Binary Search​....</p><p>﻿Jawaban:</p><p>﻿•Binary search adalah algoritma pencarian untuk data yang terurut. Pencarian dilakukan dengan cara menebak apakah data yang dicari berada ditengah-tengah data, kemudian membandingkan data yang dicari dengan data yang ada ditengah. Bila data yang ditengah sama dengan data yang dicari, berarti data ditemukan.</p><br />
                                            <h2 class="ez-toc-section" id="buatlah-program-sederhana-menggunakan-c-untuk-melakukan-proses-pencarian-menggunakan-algoritma-sequential-search-dan-binary-search-dengan-ketentuan-data-tersebut-diurutkan-terlebih-dahulu-secara-d">
                            13. Buatlah program sederhana menggunakan C++ untuk melakukan proses pencarian menggunakan algoritma sequential search dan binary search, dengan ketentuan, data tersebut diurutkan terlebih dahulu secara descending. ​</h2><br />
                        <p><strong>Jawaban:</strong></p><p>Berikut jawabannya dalam bahasa C++:</p><p>#define _CRT_SECURE_NO_WARNINGS
</p><p>#include&lt;stdio.h&gt;
</p><p>#include&lt;stdlib.h&gt;
</p><p>#include&lt;time.h&gt;
</p><p>struct Data
</p><p>{
</p><p>	int value;
</p><p>}dataCollection[1001];
</p><p>
</p><p>void spacing()
</p><p>{
</p><p>	for(int i=0; i&lt;25; i++)
</p><p>	{
</p><p>  printf("\n");
</p><p>	}
</p><p>}
</p><p>void insertRandomData()
</p><p>{
</p><p>	srand(time(NULL)); //Random Seeding
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  //Insert Data Random Value from 1 to 1000
</p><p>  dataCollection[i].value = rand()%1000 + 1;
</p><p>	}
</p><p>
</p><p>}
</p><p>void sortDataInDescendingOrder()
</p><p>{
</p><p>	int max,temp;
</p><p>	for(int i=0; i&lt;999; i++)
</p><p>	{
</p><p>  max = i;
</p><p>  for(int j=i+1; j&lt;1000; j++)
</p><p>  {
</p><p>  	if(dataCollection[max].value&lt;dataCollection[j].value)
</p><p>  	{
</p><p>    max = j;
</p><p>  	}
</p><p>  }
</p><p>  temp = dataCollection[max].value;
</p><p>  dataCollection[max].value = dataCollection[i].value;
</p><p>  dataCollection[i].value = temp;
</p><p>	}
</p><p>}
</p><p>void viewAllData()
</p><p>{
</p><p>	system("cls");
</p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  printf("Data %-4d: %-4d\n",i+1,dataCollection[i].value);
</p><p>	}
</p><p>	printf("\n\nPress Enter to Continue");
</p><p>	getchar();
</p><p>}
</p><p>void searchAnEntryUsingLinearSearch(int searchEntry)
</p><p>{
</p><p>  </p><p>	for(int i=0; i&lt;1000; i++)
</p><p>	{
</p><p>  if(dataCollection[i].value == searchEntry)
</p><p>  {
</p><p>  	printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,i);
</p><p>  	getchar();
</p><p>  	return;
</p><p>  }
</p><p>	}
</p><p>	printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>	getchar();
</p><p>}
</p><p>int searchAnEntryUsingBinarySearch(int searchEntry, int low, int high)
</p><p>{
</p><p>	if(high &gt;= low)
</p><p>	{
</p><p>  int mid = low + (high-low) /2;
</p><p>  if(dataCollection[mid].value == searchEntry)
</p><p>  	return mid;
</p><p>  if(dataCollection[mid].value &gt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,mid+1,high);    </p><p>  if(dataCollection[mid].value &lt; searchEntry)
</p><p>  	return searchAnEntryUsingBinarySearch(searchEntry,low,mid-1);
</p><p>	}
</p><p>	return -1;
</p><p>}
</p><p>int main()
</p><p>{
</p><p>  </p><p>	int menu;
</p><p>	int searchEntry, result;
</p><p>	//Insert 1000 Random Entry
</p><p>	insertRandomData();
</p><p>	//Sort Data Descending
</p><p>	sortDataInDescendingOrder();
</p><p>	do
</p><p>	{
</p><p>  system("cls");
</p><p>  spacing();
</p><p>  printf("1. View All Data\n2. Search An Entry Using Binary Search\n3. Search An Entry Using Linear Search\n0. Exit\nChoose: ");
</p><p>  scanf("%d",&amp;menu);
</p><p>  rewind(stdin);
</p><p>  switch(menu)
</p><p>  {
</p><p>  case 1:
</p><p>  	viewAllData();
</p><p>    break;
</p><p>  case 2:
</p><p>    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	result = searchAnEntryUsingBinarySearch(searchEntry,0,1000);
</p><p>  	if(result==-1)
</p><p>    printf("There is no %d in collection!\nPress Enter to Continue...",searchEntry);
</p><p>  	else
</p><p>    printf("There is %d in index %d!\nPress Enter to Continue...",searchEntry,result);
</p><p>  	getchar();
</p><p>  	break;
</p><p>  case 3:    </p><p>  	system("cls");
</p><p>  	do
</p><p>  	{
</p><p>    printf("Search Number: ");
</p><p>    scanf("%d",&amp;searchEntry);
</p><p>    rewind(stdin);
</p><p>  	}while(searchEntry&lt;=0);
</p><p>  	searchAnEntryUsingLinearSearch(searchEntry);
</p><p>  	break;
</p><p>  }
</p><p>	}while(menu!=0);
</p><p>	return 0;
</p><p>}</p><p><strong>Penjelasan:</strong></p><p>Program ini berjalan pertama kali akan menginisialisasi struct data dengan variable array bernama <strong>dataCollection</strong> yang dapat menampung 1000 entri data yang berupa integer atau bilangan bulat. Kemudian <strong>dataCollection </strong> akan diisi dengan 1000 entri data bilangan bulat yang dipilih acak dari angka 1 hingga 1000. Setelah diisi, array dataCollection akan diurutkan descending dengan menggunakan algoritma <strong>selection sort</strong>. Lalu user dapat memilih menu 1 untuk melihat seluruh data, menu 2 untuk mencari data dengan menggunakan metode binary search, dan menu 3 untuk mencari data dengan menggunakan metode linear search. Terakhir jika user ingin keluar maka akan mengisi menu 0 untuk keluar.</p><br />
                                            <h2 class="ez-toc-section" id="tolong-di-jelaskan-apa-arti-dari-binary-search-tree-sequantial-search-serta-cara-kerja-nya-thanks">
                            14. Tolong di jelaskan apa arti dari :
- Binary Search Tree 
- Sequantial Search 
serta cara kerja nya.
Thank's</h2><br />
                        pencarian bineral atau binary search adalah metode pencarian dengan mengurutkan data terlebih dahulu<br />pencarian sekuensial atau sequential search adalah pencarian dengan membiarkan data aslinya (tidak diurutkan)<br /><br />dibanding pencarian sekuensial, pencarian bineral jauh lebih cepat karrna data yang sudah terurut<br />
                                            <h2 class="ez-toc-section" id="diantara-binary-search-dan-sequintial-manakah-yang-lebih-efisien-dan-berikan-alasannya%e2%80%8b">
                            15. diantara binary search dan sequintial manakah yang lebih efisien dan berikan alasannya​</h2><br />
                        <p>Yang lebih efisien dari binary search dan sequential search adalah <strong>binary</strong><strong> </strong><strong>search</strong><strong> </strong><strong>k</strong><strong>a</strong><strong>r</strong><strong>e</strong><strong>n</strong><strong>a</strong><strong> </strong><strong>d</strong><strong>e</strong><strong>n</strong><strong>g</strong><strong>a</strong><strong>n</strong><strong> </strong><strong>c</strong><strong>a</strong><strong>r</strong><strong>a</strong><strong> </strong><strong>i</strong><strong>n</strong><strong>i</strong><strong> </strong><strong>k</strong><strong>i</strong><strong>t</strong><strong>a</strong><strong> </strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>g</strong><strong>e</strong><strong>c</strong><strong>e</strong><strong>k</strong><strong> </strong><strong>s</strong><strong>e</strong><strong>p</strong><strong>a</strong><strong>r</strong><strong>u</strong><strong>h</strong><strong> </strong><strong>d</strong><strong>a</strong><strong>r</strong><strong>i</strong><strong> </strong><strong>d</strong><strong>a</strong><strong>t</strong><strong>a</strong><strong> </strong><strong>y</strong><strong>a</strong><strong>n</strong><strong>g</strong><strong> </strong><strong>a</strong><strong>d</strong><strong>a</strong><strong>,</strong><strong> </strong><strong>j</strong><strong>i</strong><strong>k</strong><strong>a</strong><strong> </strong><strong>t</strong><strong>i</strong><strong>d</strong><strong>a</strong><strong>k</strong><strong> </strong><strong>d</strong><strong>i</strong><strong>t</strong><strong>e</strong><strong>m</strong><strong>u</strong><strong>k</strong><strong>a</strong><strong>n</strong><strong> </strong><strong>m</strong><strong>a</strong><strong>k</strong><strong>a</strong><strong> </strong><strong>k</strong><strong>i</strong><strong>t</strong><strong>a</strong><strong> </strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>g</strong><strong>e</strong><strong>c</strong><strong>e</strong><strong>k</strong><strong> </strong><strong>k</strong><strong>e</strong><strong>m</strong><strong>b</strong><strong>a</strong><strong>l</strong><strong>i</strong><strong> </strong><strong>separuh</strong><strong> </strong><strong>data</strong><strong> </strong><strong>yang</strong><strong> </strong><strong>lain</strong><strong> </strong><strong>dengan</strong><strong> </strong><strong>kompleksitas</strong><strong> </strong><strong>O</strong><strong>(</strong><strong> </strong><strong>log</strong><strong> </strong><strong>N</strong><strong> </strong><strong>)</strong><strong>,</strong><strong> </strong><strong>sedangkan</strong><strong> </strong><strong>sequential</strong><strong> </strong><strong>search</strong><strong> </strong><strong>mengecek</strong><strong> </strong><strong>satu</strong><strong> </strong><strong>per</strong><strong> </strong><strong>satu</strong><strong> </strong><strong>dari</strong><strong> </strong><strong>s</strong><strong>eluruh</strong><strong> </strong><strong>data</strong><strong> </strong><strong>yang</strong><strong> </strong><strong>ada</strong><strong> </strong><strong>sehingga</strong><strong> </strong><strong>kompleksitasnya</strong><strong> </strong><strong>menjadi</strong><strong> </strong><strong>O</strong><strong>(</strong><strong>N</strong><strong>)</strong><strong>.</strong></p><p></p><p><strong>PEMBAHASAN</strong></p><p></p><p><strong>Binary</strong><strong> </strong><strong>Search</strong><strong> </strong>adalah salah satu cara untuk mencari suatu data dengan jumlah data yang relatif besar. Kompleksitas dari cara ini adalah O( log N ). Binary Search dapat bekerja dengan cara mengecek separuh data yang ada, jika data tersebut tidak ditemukan maka cek kembali separuh data yang lain. </p><p></p><p><strong>Sequential</strong><strong> </strong><strong>Search</strong><strong> </strong><strong>/</strong><strong> </strong><strong>Linear</strong><strong> </strong><strong>Search</strong><strong> </strong>adalah salah satu cara untuk mencari suatu data dengan cara mengecek satu per satu dari semua data yang ada. Kompleksitas dari cara ini adalah O(N). Cara ini tidak disarankan jika digunakan pada data yang jumlahnya besar karena akan berjalan sangat lambat. </p><p></p><p>Dari dua penjelasan diatas, O( log N ) jauh lebih cepat dari O(N) sehingga binary search bekerja jauh lebih efisien dari sequential search.</p><p></p><p>Jadi, binary search bekerja lebih efisien daripada sequential search.</p><p></p><p></p><p><strong>P</strong><strong>E</strong><strong>L</strong><strong>A</strong><strong>J</strong><strong>A</strong><strong>R</strong><strong>I</strong><strong> </strong><strong>L</strong><strong>E</strong><strong>B</strong><strong>I</strong><strong>H</strong><strong> </strong><strong>L</strong><strong>A</strong><strong>N</strong><strong>J</strong><strong>U</strong><strong>T</strong><strong> </strong><strong>:</strong></p><p> - https://brainly.co.id/tugas/22763777</p><p></p><p><strong>D</strong><strong>E</strong><strong>T</strong><strong>A</strong><strong>I</strong><strong>L</strong><strong> </strong><strong>J</strong><strong>A</strong><strong>W</strong><strong>A</strong><strong>B</strong><strong>A</strong><strong>N</strong><strong> </strong><strong>:</strong></p><p>Kelas 10</p><p>Pelajaran TI</p><p>Bab 6 - Mengenal Pemrograman Komputer</p><p>Kode : 10.11.6</p><p>Kata Kunci : Searching, Binary Search, Sequential Search</p><br />
                    
                </div>
                <div class="youtubeVideo" style="text-align: center">
                    <h3>Video Terkait</h3>
                    <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/Uuyv88Tn9iU?controls=0" frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"allowfullscreen></iframe>
                </div>
                <footer class="entry-meta" aria-label="Meta postingan">
                    <span class="cat-links"><span class="gp-icon icon-categories"><svg viewBox="0 0 512 512"
                                aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em">
                                <path
                                    d="M0 112c0-26.51 21.49-48 48-48h110.014a48 48 0 0143.592 27.907l12.349 26.791A16 16 0 00228.486 128H464c26.51 0 48 21.49 48 48v224c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112z">
                                </path>
                            </svg></span><span class="screen-reader-text">Kategori </span>ti</span>
            </div>
        </article>
    </main>
            </div>
            <div class="widget-area sidebar is-right-sidebar" id="right-sidebar">
                <div class="inside-right-sidebar">
                    <aside id="categories-2" class="widget inner-padding widget_categories">
                        <h2 class="widget-title">Topik</h2>
                        <ul>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/cara-hack-soal-ujian-online/">Cara Hack Soal Ujian Online</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/corel-draw-portable-gigapurbalingga/">Corel Draw Portable Gigapurbalingga</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/kumpulan-soal-nifas-beserta-jawabannya/">Kumpulan Soal Nifas Beserta Jawabannya</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/penjaskes-kelas-7-kurikulum-2013/">Penjaskes Kelas 7 Kurikulum 2013</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/optimasi-ekonomi/">Optimasi Ekonomi</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/gdp-freeport-kaskus/">Gdp Freeport Kaskus</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/kunci-jawaban-buku-paket-pkn-kelas-11-semester-1/">Kunci Jawaban Buku Paket Pkn Kelas 11 Semester 1</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/doa-dalam-bahasa-batak-toba/">Doa Dalam Bahasa Batak Toba</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/pendidikan-agama-islam-kelas-7-kurikulum-2013/">Pendidikan Agama Islam Kelas 7 Kurikulum 2013</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/khasiat-ayat-kursi-untuk-pengasihan/">Khasiat Ayat Kursi Untuk Pengasihan</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/operasi-matriks-dan-sifat-sifatnya/">Operasi Matriks Dan Sifat Sifatnya</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/analisis-butir-soal-excel/">Analisis Butir Soal Excel</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/download-lagu-oh-tuhan-mohon-ampun/">Download Lagu Oh Tuhan Mohon Ampun</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/soal-hots-bahasa-inggris/">Soal Hots Bahasa Inggris</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/surat-penunjukan-kantor-cabang/">Surat Penunjukan Kantor Cabang</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/download-alpeka-bos-2018-terbaru/">Download Alpeka Bos 2018 Terbaru</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/contoh-soal-tentang-letter-dalam-bahasa-inggris/">Contoh Soal Tentang Letter Dalam Bahasa Inggris</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/pembahasan-soal-transformasi-geometri/">Pembahasan Soal Transformasi Geometri</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/barisan-dan-deret-aritmatika-kelas-8/">Barisan Dan Deret Aritmatika Kelas 8</a>
                                </li>
                                                            <li class="cat-item cat-item-23"><a
                                        href="https://anakpramuka.github.io/khasiat-surah-yasin-ayat-36/">Khasiat Surah Yasin Ayat 36</a>
                                </li>
                                                    </ul>

                    </aside>
                </div>
            </div>

        </div>
    </div>
    <div class="site-footer">
        <footer class="site-info" aria-label="Situs" itemtype="https://schema.org/WPFooter" itemscope>
            <div class="inside-site-info grid-container">
                <div class="copyright-bar">
                    <span class="copyright">&copy; 2023 <a href="https://anakpramuka.github.io"
                            itemprop="url">BELAJAR</a></span>
                </div>
            </div>
        </footer>
    </div>

    <a title="Gulirkan kembali ke puncak laman" aria-label="Gulirkan kembali ke puncak laman" rel="nofollow"
        href="#" class="generate-back-to-top" data-scroll-speed="400" data-start-scroll="300">
        <span class="gp-icon icon-arrow-up"><svg viewBox="0 0 330 512" aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill-rule="evenodd"
                clip-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="1.414">
                <path
                    d="M305.863 314.916c0 2.266-1.133 4.815-2.832 6.514l-14.157 14.163c-1.699 1.7-3.964 2.832-6.513 2.832-2.265 0-4.813-1.133-6.512-2.832L164.572 224.276 53.295 335.593c-1.699 1.7-4.247 2.832-6.512 2.832-2.265 0-4.814-1.133-6.513-2.832L26.113 321.43c-1.699-1.7-2.831-4.248-2.831-6.514s1.132-4.816 2.831-6.515L158.06 176.408c1.699-1.7 4.247-2.833 6.512-2.833 2.265 0 4.814 1.133 6.513 2.833L303.03 308.4c1.7 1.7 2.832 4.249 2.832 6.515z"
                    fill-rule="nonzero" />
            </svg></span>
    </a>
    <script id="generate-a11y">
        ! function() {
            "use strict";
            if ("querySelector" in document && "addEventListener" in window) {
                var e = document.body;
                e.addEventListener("mousedown", function() {
                    e.classList.add("using-mouse")
                }), e.addEventListener("keydown", function() {
                    e.classList.remove("using-mouse")
                })
            }
        }();
    </script>
    <!--[if lte IE 11]>
<script src='https://anakpramuka.github.io/js/classList.min.js' ?ver=3.2.4' id='generate-classlist-js'></script>
<![endif]-->
    <script id='generate-menu-js-extra'>
        var generatepressMenu = {
            "toggleOpenedSubMenus": "1",
            "openSubMenuLabel": "Buka Submenu",
            "closeSubMenuLabel": "Tutup submenu"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/menu.min.js' ?ver=3.2.4' id='generate-menu-js'></script>
    <script id='generate-navigation-search-js-extra'>
        var generatepressNavSearch = {
            "open": "Buka Kolom Pencarian",
            "close": "Tutup Kolom Pencarian"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/navigation-search.min.js' ?ver=3.2.4' id='generate-navigation-search-js'></script>
    <script id='generate-back-to-top-js-extra'>
        var generatepressBackToTop = {
            "smooth": "1"
        };
    </script>
    <script src='https://anakpramuka.github.io/js/back-to-top.min.js' ?ver=3.2.4' id='generate-back-to-top-js'></script>
    <script type='text/javascript' src='//jd3j7g5z1fqs.com/96/78/7a/96787a1945876b1a9c10f79941441964.js'></script>
<script type='text/javascript' src='//jd3j7g5z1fqs.com/b4/f1/ef/b4f1ef8dfe59b7fa68754094cf6c8e0e.js'></script>
  <!-- Histats.com  START  (aync)-->
<script type="text/javascript">var _Hasync= _Hasync|| [];
_Hasync.push(['Histats.start', '1,4739059,4,0,0,0,00010000']);
_Hasync.push(['Histats.fasi', '1']);
_Hasync.push(['Histats.track_hits', '']);
(function() {
var hs = document.createElement('script'); hs.type = 'text/javascript'; hs.async = true;
hs.src = ('//s10.histats.com/js15_as.js');
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(hs);
})();</script>
<noscript><a href="/" target="_blank"><img  src="//sstatic1.histats.com/0.gif?4739059&101" alt="" border="0"></a></noscript>
<!-- Histats.com  END  -->
</body>

</html>
